[{"C:\\Users\\user\\react\\movie-search\\src\\index.js":"1","C:\\Users\\user\\react\\movie-search\\src\\App.js":"2","C:\\Users\\user\\react\\movie-search\\src\\reportWebVitals.js":"3","C:\\Users\\user\\react\\movie-search\\src\\modules\\index.js":"4","C:\\Users\\user\\react\\movie-search\\src\\modules\\boxOffice.js":"5","C:\\Users\\user\\react\\movie-search\\src\\container\\BoxOfficeContainer.js":"6","C:\\Users\\user\\react\\movie-search\\src\\components\\BoxOffice.js":"7","C:\\Users\\user\\react\\movie-search\\src\\container\\NavbarContainer.js":"8","C:\\Users\\user\\react\\movie-search\\src\\components\\Navbar.js":"9","C:\\Users\\user\\react\\movie-search\\src\\components\\MovieDetail.js":"10","C:\\Users\\user\\react\\movie-search\\src\\container\\MovieDetailContainer.js":"11","C:\\Users\\user\\react\\movie-search\\src\\modules\\movieDetail.js":"12","C:\\Users\\user\\react\\movie-search\\src\\modules\\movieList.js":"13","C:\\Users\\user\\react\\movie-search\\src\\container\\MovieListContainer.js":"14","C:\\Users\\user\\react\\movie-search\\src\\components\\MovieList.js":"15","C:\\Users\\user\\react\\movie-search\\src\\components\\Company.js":"16","C:\\Users\\user\\react\\movie-search\\src\\container\\CompanyContainer.js":"17","C:\\Users\\user\\react\\movie-search\\src\\modules\\company.js":"18","C:\\Users\\user\\react\\movie-search\\src\\modules\\people.js":"19","C:\\Users\\user\\react\\movie-search\\src\\container\\PeopleContainer.js":"20","C:\\Users\\user\\react\\movie-search\\src\\components\\People.js":"21","C:\\Users\\user\\react\\movie-search\\src\\container\\PeopleDetailContainer.js":"22","C:\\Users\\user\\react\\movie-search\\src\\components\\PeopleDetail.js":"23","C:\\Users\\user\\react\\movie-search\\src\\modules\\peopleDetail.js":"24","C:\\Users\\user\\react\\movie-search\\src\\modules\\companyDetail.js":"25","C:\\Users\\user\\react\\movie-search\\src\\container\\CompanyDetailContainer.js":"26","C:\\Users\\user\\react\\movie-search\\src\\components\\CompanyDetail.js":"27","C:\\Users\\user\\react\\movie-search\\src\\pages\\BoxOfficePage.js":"28","C:\\Users\\user\\react\\movie-search\\src\\pages\\MovieDetailPage.js":"29","C:\\Users\\user\\react\\movie-search\\src\\pages\\MovieListPage.js":"30","C:\\Users\\user\\react\\movie-search\\src\\pages\\CompanyPage.js":"31","C:\\Users\\user\\react\\movie-search\\src\\pages\\CompanyDetailPage.js":"32","C:\\Users\\user\\react\\movie-search\\src\\pages\\PeopleDetailPage.js":"33","C:\\Users\\user\\react\\movie-search\\src\\pages\\PeoplePage.js":"34","C:\\Users\\user\\react\\movie-search\\src\\api\\boxOffice.js":"35","C:\\Users\\user\\react\\movie-search\\src\\api\\key.js":"36","C:\\Users\\user\\react\\movie-search\\src\\api\\company.js":"37","C:\\Users\\user\\react\\movie-search\\src\\api\\companyDetail.js":"38","C:\\Users\\user\\react\\movie-search\\src\\api\\movieDetail.js":"39","C:\\Users\\user\\react\\movie-search\\src\\api\\movieList.js":"40","C:\\Users\\user\\react\\movie-search\\src\\api\\people.js":"41","C:\\Users\\user\\react\\movie-search\\src\\api\\peopleDetail.js":"42","C:\\Users\\user\\react\\movie-search\\src\\lib\\asyncUtils.js":"43","C:\\Users\\user\\react\\movie-search\\src\\tag\\bookmarkTag\\BookmarkTag.js":"44","C:\\Users\\user\\react\\movie-search\\src\\tag\\loadingbar\\loadingbar.js":"45","C:\\Users\\user\\react\\movie-search\\src\\tag\\contentTag\\contentTag.js":"46"},{"size":538,"mtime":1609593902783,"results":"47","hashOfConfig":"48"},{"size":1409,"mtime":1612832179921,"results":"49","hashOfConfig":"48"},{"size":362,"mtime":1608243964160,"results":"50","hashOfConfig":"48"},{"size":528,"mtime":1611265128212,"results":"51","hashOfConfig":"48"},{"size":1721,"mtime":1612924283614,"results":"52","hashOfConfig":"48"},{"size":1382,"mtime":1612933488260,"results":"53","hashOfConfig":"48"},{"size":7163,"mtime":1613225615107,"results":"54","hashOfConfig":"48"},{"size":158,"mtime":1609791121278,"results":"55","hashOfConfig":"48"},{"size":1571,"mtime":1612933417367,"results":"56","hashOfConfig":"48"},{"size":5100,"mtime":1612933461249,"results":"57","hashOfConfig":"48"},{"size":1127,"mtime":1612922678999,"results":"58","hashOfConfig":"48"},{"size":1199,"mtime":1612924296429,"results":"59","hashOfConfig":"48"},{"size":2002,"mtime":1612922155067,"results":"60","hashOfConfig":"48"},{"size":1643,"mtime":1613225635806,"results":"61","hashOfConfig":"48"},{"size":7866,"mtime":1612960032594,"results":"62","hashOfConfig":"48"},{"size":7154,"mtime":1612960127569,"results":"63","hashOfConfig":"48"},{"size":1522,"mtime":1612959465000,"results":"64","hashOfConfig":"48"},{"size":1914,"mtime":1612959391929,"results":"65","hashOfConfig":"48"},{"size":1946,"mtime":1612923191026,"results":"66","hashOfConfig":"48"},{"size":1492,"mtime":1612960615053,"results":"67","hashOfConfig":"48"},{"size":7068,"mtime":1612961037717,"results":"68","hashOfConfig":"48"},{"size":1096,"mtime":1612923477803,"results":"69","hashOfConfig":"48"},{"size":3454,"mtime":1612933476535,"results":"70","hashOfConfig":"48"},{"size":1142,"mtime":1612924291365,"results":"71","hashOfConfig":"48"},{"size":924,"mtime":1612924300894,"results":"72","hashOfConfig":"48"},{"size":925,"mtime":1612919883736,"results":"73","hashOfConfig":"48"},{"size":3841,"mtime":1612933456314,"results":"74","hashOfConfig":"48"},{"size":169,"mtime":1612827408524,"results":"75","hashOfConfig":"48"},{"size":235,"mtime":1612827638908,"results":"76","hashOfConfig":"48"},{"size":169,"mtime":1612827885350,"results":"77","hashOfConfig":"48"},{"size":162,"mtime":1612828172614,"results":"78","hashOfConfig":"48"},{"size":249,"mtime":1612828325194,"results":"79","hashOfConfig":"48"},{"size":235,"mtime":1612831931898,"results":"80","hashOfConfig":"48"},{"size":157,"mtime":1612842094517,"results":"81","hashOfConfig":"48"},{"size":520,"mtime":1612923587920,"results":"82","hashOfConfig":"48"},{"size":75,"mtime":1612838878246,"results":"83","hashOfConfig":"48"},{"size":928,"mtime":1612919254349,"results":"84","hashOfConfig":"48"},{"size":522,"mtime":1612919785959,"results":"85","hashOfConfig":"48"},{"size":478,"mtime":1612922846211,"results":"86","hashOfConfig":"48"},{"size":948,"mtime":1612922375112,"results":"87","hashOfConfig":"48"},{"size":826,"mtime":1612923154472,"results":"88","hashOfConfig":"48"},{"size":555,"mtime":1613226592997,"results":"89","hashOfConfig":"48"},{"size":1890,"mtime":1613127971083,"results":"90","hashOfConfig":"48"},{"size":541,"mtime":1612933341839,"results":"91","hashOfConfig":"48"},{"size":422,"mtime":1612933342003,"results":"92","hashOfConfig":"48"},{"size":804,"mtime":1612933341921,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"1b3rb90",{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"96"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"96"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"96"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"96"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"96"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"96"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"96"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"96"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"C:\\Users\\user\\react\\movie-search\\src\\index.js",[],["195","196"],"C:\\Users\\user\\react\\movie-search\\src\\App.js",[],"C:\\Users\\user\\react\\movie-search\\src\\reportWebVitals.js",[],"C:\\Users\\user\\react\\movie-search\\src\\modules\\index.js",[],"C:\\Users\\user\\react\\movie-search\\src\\modules\\boxOffice.js",[],"C:\\Users\\user\\react\\movie-search\\src\\container\\BoxOfficeContainer.js",[],"C:\\Users\\user\\react\\movie-search\\src\\components\\BoxOffice.js",[],"C:\\Users\\user\\react\\movie-search\\src\\container\\NavbarContainer.js",[],"C:\\Users\\user\\react\\movie-search\\src\\components\\Navbar.js",[],"C:\\Users\\user\\react\\movie-search\\src\\components\\MovieDetail.js",["197","198","199"],"import { useEffect, useRef, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./MovieDetail.css\";\r\nimport { LoadingBar } from \"../tag/loadingbar/loadingbar.js\";\r\nimport { ContentTag, ContentsTag } from \"../tag/contentTag/contentTag.js\";\r\n\r\n\r\nconst MovieDetail = ({ movie, error, loading }) => {\r\n\r\n    const MovieTitleTag = ({ movieName, moviePrdYear }) => {\r\n        return (\r\n            <div className=\"movie_title\">\r\n                <div className=\"movie_name\">\r\n                    <h1>{movieName}</h1>\r\n                </div>\r\n                <div className=\"movie_prdt_year\">\r\n                    <h3>({moviePrdYear})</h3>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const MovieActorsTag = ({ actors }) => {\r\n        return (\r\n            <div className=\"movie_actors\">\r\n                {actors.map((actor, index) => {\r\n                    return (\r\n                        <div key={index} className=\"movie_actor\">\r\n                            <div className=\"movie_actor_profile\">\r\n                                <span><img alt={`${actor.peopleNm}의 사진`}></img></span>\r\n                            </div>\r\n                            <div className=\"movie_actor_name\"><h5>{actor.peopleNm}</h5></div>\r\n                            {\r\n                                actor.cast !== \"\" &&\r\n                                <div className=\"movie_actor_cast\"><h5>{actor.cast} 역</h5></div>\r\n                            }\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const movieOpenDate = (openDate) => {\r\n        const year = openDate.substring(0, 4);\r\n        const month = openDate.substring(4, 6);\r\n        const day = openDate.substring(6, 8);\r\n        return `${year}년 ${month}월 ${day}일`\r\n    }\r\n\r\n    const MovieCompanysTag = ({ companys }) => {\r\n        return (\r\n            <div className=\"companys\">\r\n                {companys.map((company) => {\r\n                    return (\r\n                        <div key={Math.random()}>\r\n                            <Link to={`/company/detail/${company.companyCd}`}>\r\n                                <div className=\"company\">\r\n                                    <h5>\r\n                                        {company.companyPartNm} - {company.companyNm}\r\n                                    </h5>\r\n                                </div>\r\n                            </Link>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    switch (true) {\r\n        case loading:\r\n            return (\r\n                <LoadingBar />\r\n            )\r\n        case !movie:\r\n            return (\r\n                <div className=\"text-align-center\">정보없음</div>\r\n            )\r\n        case error:\r\n            return (\r\n                <div className=\"text-align-center\">에러</div>\r\n            )\r\n        default:\r\n            return (\r\n                <div className=\"movie\">\r\n                    <MovieTitleTag movieName={movie.movieNm} moviePrdYear={movie.prdtYear} />\r\n                    <div className=\"movie_box\">\r\n                        <div className=\"movie_box_inner\">\r\n                            <div className=\"movie_box_inner_top\">\r\n                                <div className=\"movie_box_inner_top--left\">\r\n                                    <div className=\"movie_poster\">\r\n                                        <span>\r\n                                            <img alt={`영화 ${movie.movieNm}의 포스터`}></img>\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"movie_box_inner_top--right\">\r\n                                    <ContentTag content={movie} classNm=\"movie_show_time\" propertyName=\"showTm\" />\r\n                                    <ContentTag content={movie} callbackFn={movieOpenDate} classNm=\"movie_open_date\" propertyName=\"openDt\" />\r\n                                    <ContentsTag contents={movie.nations} childClassNm=\"movie_nation\" classNm=\"movie_nations\" propertyName=\"nationNm\" />\r\n                                    <ContentsTag contents={movie.genres} childClassNm=\"movie_genre\" classNm=\"movie_genres\" propertyName=\"genreNm\" />\r\n                                    <ContentsTag contents={movie.directors} childClassNm=\"movie_director\" classNm=\"movie_directors\" propertyName=\"peopleNm\" />\r\n                                    <MovieCompanysTag companys={movie.companys} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"movie_box_inner_bottom\">\r\n                                <div className=\"actors_title\"><h3>참여 배우</h3></div>\r\n                                <MovieActorsTag actors={movie.actors} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n    }\r\n}\r\n\r\nexport default MovieDetail;","C:\\Users\\user\\react\\movie-search\\src\\container\\MovieDetailContainer.js",["200"],"import { useDispatch, useSelector } from \"react-redux\"\r\nimport { getMovie, setMovieCd } from \"../modules/movieDetail.js\";\r\nimport MovieDetail from \"../components/MovieDetail.js\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst MovieDetailContainer = ({ id }) => {\r\n    const { movie, movieId, error, loading } = useSelector(state => ({\r\n        movie: state.movieDetail.movie.data,\r\n        loading: state.movieDetail.movie.loading,\r\n        error: state.movieDetail.movie.error,\r\n        movieId: state.movieDetail.movieId,\r\n    }));\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const onGetMovie = (pMovieId) => {\r\n        dispatch(getMovie(pMovieId));\r\n    };\r\n\r\n    const onSetMovieId = (id) => {\r\n        setMovieCd(id);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (movieId === id) return\r\n        const param = { id };\r\n        onSetMovieId(id);\r\n        onGetMovie(param);\r\n    }, [id]);\r\n\r\n    return (\r\n        <div>\r\n            <MovieDetail\r\n                movie={movie}\r\n                error={error}\r\n                loading={loading}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieDetailContainer;","C:\\Users\\user\\react\\movie-search\\src\\modules\\movieDetail.js",[],"C:\\Users\\user\\react\\movie-search\\src\\modules\\movieList.js",[],"C:\\Users\\user\\react\\movie-search\\src\\container\\MovieListContainer.js",[],"C:\\Users\\user\\react\\movie-search\\src\\components\\MovieList.js",["201"],"import \"./MovieList.css\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { LoadingBar, LoadingBarViewMore } from \"../tag/loadingbar/loadingbar.js\";\r\nimport { ContentTag } from \"../tag/contentTag/contentTag.js\";\r\n\r\n\r\nconst MovieList = ({ itemRowPage, directorName, movieName, error, onSetItemRowPage, onGetMovieList, movieList, loading, onSetMovieList, onPageUp, currentPage }) => {\r\n    const movieNmRef = useRef();\r\n    const directorNmRef = useRef();\r\n    const itemRowPageRef = useRef();\r\n\r\n    useEffect(() => {\r\n        movieNmRef.current.value = movieName;\r\n        directorNmRef.current.value = directorName;\r\n        itemRowPageRef.current.value = itemRowPage;\r\n    });\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (movieNmRef.current.value === \"\" && directorNmRef.current.value === \"\") return\r\n        onSetMovieList(movieNmRef.current.value, directorNmRef.current.value)\r\n        onSetItemRowPage(itemRowPage);\r\n        itemRowPageRef.current.value = itemRowPage;\r\n        onGetMovieList();\r\n    }\r\n\r\n    const onChangeItemRowPage = (e) => {\r\n        onSetItemRowPage(itemRowPageRef.current.value);\r\n        if (movieNmRef.current.value === \"\" && directorNmRef.current.value === \"\") return\r\n        onSetMovieList(movieNmRef.current.value, directorNmRef.current.value)\r\n        onGetMovieList();\r\n    }\r\n\r\n    const TitleTag = () => {\r\n        return (\r\n            <div className=\"container title text-align-center\">\r\n                <h1>\r\n                    영화검색\r\n                </h1>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const SelectTag = () => {\r\n        return (\r\n            <div className=\"container text-align-center\">\r\n                <div>\r\n                    <label>검색 결과 개수</label>\r\n                    <select ref={itemRowPageRef} onChange={onChangeItemRowPage} id=\"select-itemPerPage\">\r\n                        <option value=\"1\">1</option>\r\n                        <option value=\"5\">5</option>\r\n                        <option value=\"10\">10</option>\r\n                        <option value=\"20\">20</option>\r\n                        <option value=\"50\">50</option>\r\n                        <option value=\"100\">100</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const InputForm = () => {\r\n        return (\r\n            <div className=\"container input text-align-center\">\r\n                <form className=\"movielist_form\" onSubmit={onSubmit} type=\"submit\">\r\n                    <fieldset className=\"movielist_fieldset\">\r\n                        <input className=\"input_title\" ref={movieNmRef} placeholder=\"제목\" type=\"text\" />\r\n                        <input className=\"input_director\" ref={directorNmRef} placeholder=\"감독\" type=\"text\" />\r\n                        <input className=\"input_submit\" type=\"submit\" />\r\n                    </fieldset>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const addOpenDate = (pString) => {\r\n        const year = `${pString[0]}${pString[1]}${pString[2]}${pString[3]}년`;\r\n        const month = `${pString[4]}${pString[5]}월`;\r\n        const day = `${pString[6]}${pString[7]}일`;\r\n        return `${year} ${month} ${day}`;\r\n    }\r\n\r\n    const movieGetMore = () => {\r\n        if (currentPage * itemRowPage !== movieList.length) return\r\n        onPageUp();\r\n        onGetMovieList();\r\n    }\r\n\r\n    const MovieTag = ({ movieList }) => {\r\n        return (\r\n            <div className=\"movielist_movie\">\r\n                {movieList.map((movie) => {\r\n                    return (\r\n                        <div key={movie.movieCd} className=\"movielist_movie_wrap\">\r\n                            <div className=\"movielist_movie_inner\">\r\n                                <Link to={`/movie/detail/${movie.movieCd}`} className=\"movielist_movie_inner_top\">\r\n                                    <div className=\"movielist_movie_poster front\">\r\n                                        <span>\r\n                                            <img alt={`영화 ${movie.movieNm}의 포스터`} />\r\n                                        </span>\r\n                                    </div>\r\n                                </Link>\r\n                                <div className=\"movielist_movie_inner_bottom\">\r\n                                    <ContentTag content={movie} propertyName=\"movieNm\" classNm=\"movielist_movie_name_ko\" />\r\n                                    <ContentTag content={movie} propertyName=\"movieNmEn\" classNm=\" movielist_movie_name_en\" />\r\n                                    <ContentTag content={movie} callbackFn={addOpenDate} propertyName=\"openDt\" classNm=\"movielist_movie_open_dt\" />\r\n                                    <ContentTag content={movie} propertyName=\"prdtYear\" classNm=\"movielist_movie_prdt_year\" />\r\n                                    <ContentTag content={movie} propertyName=\"prdtStatNm\" classNm=\"movielist_movie_prdt_stat_nm\" />\r\n                                    <ContentTag content={movie} propertyName=\"repNationNm\" classNm=\"movielist_movie_rep_nation_mm\" />\r\n                                    <ContentTag content={movie} propertyName=\"repGenreNm\" classNm=\"movielist_movie_rep_genre_nm\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    switch (true) {\r\n        case loading && !movieList:\r\n            return (\r\n                <>\r\n                    <TitleTag />\r\n                    <InputForm />\r\n                    <SelectTag />\r\n                    <LoadingBar />\r\n                </>\r\n            )\r\n        case loading:\r\n            return (\r\n                <div>\r\n                    <TitleTag />\r\n                    <InputForm />\r\n                    <SelectTag />\r\n                    <div className=\"movielist\">\r\n                        <div className=\"container\">\r\n                            <MovieTag movieList={movieList} />\r\n                            <LoadingBarViewMore />\r\n                        </div>\r\n                    </div>\r\n                </div >\r\n            )\r\n        case !movieList:\r\n            return (\r\n                <>\r\n                    <TitleTag />\r\n                    <InputForm />\r\n                    <SelectTag />\r\n                </>\r\n            )\r\n        case error:\r\n            return (\r\n                <>\r\n                    <TitleTag />\r\n                    <InputForm />\r\n                    <SelectTag />\r\n                    <div className=\"text-align-center\">에러</div>\r\n                </>\r\n            )\r\n        case movieList.length === 0:\r\n            return (\r\n                <>\r\n                    <TitleTag />\r\n                    <InputForm />\r\n                    <SelectTag />\r\n                    <div className=\"text-align-center\">정보없음</div>\r\n                </>\r\n            )\r\n        default:\r\n            return (\r\n                <div>\r\n                    <TitleTag />\r\n                    <InputForm />\r\n                    <SelectTag />\r\n                    <div className=\"movielist\">\r\n                        <div className=\"container\">\r\n                            <MovieTag movieList={movieList} />\r\n                            {\r\n                                currentPage * itemRowPage === movieList.length &&\r\n                                <div className=\"view_more_button\">\r\n                                    <button onClick={movieGetMore}><i className=\"fas fa-chevron-circle-down\"></i></button>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div >\r\n            )\r\n    }\r\n}\r\n\r\nexport default MovieList;","C:\\Users\\user\\react\\movie-search\\src\\components\\Company.js",["202"],"import { useEffect, useRef } from \"react\"\r\nimport \"./Company.css\";\r\nimport { useState } from \"react\"\r\nimport { Link } from \"react-router-dom\";\r\nimport { LoadingBar, LoadingBarViewMore } from \"../tag/loadingbar/loadingbar.js\";\r\nimport { ContentTag } from \"../tag/contentTag/contentTag.js\";\r\n\r\n\r\nconst Company = ({ itemRowPage, ceoName, companyName, onSetItemRowPage, companyList, onGetCompany, error, loading, currentPage, onPageUp, onSetCompany }) => {\r\n    const companyNmRef = useRef();\r\n    const ceoNmRef = useRef();\r\n    const itemRowPageRef = useRef(10);\r\n\r\n    useEffect(() => {\r\n        companyNmRef.current.value = companyName;\r\n        itemRowPageRef.current.value = itemRowPage;\r\n        ceoNmRef.current.value = ceoName;\r\n    });\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (companyNmRef.current.value === \"\" && ceoNmRef.current.value === \"\") return\r\n        onSetCompany(companyNmRef.current.value, ceoNmRef.current.value);\r\n        onSetItemRowPage(itemRowPageRef.current.value);\r\n        onGetCompany();\r\n    }\r\n\r\n    const onChangeItemRowPage = (e) => {\r\n        onSetItemRowPage(itemRowPageRef.current.value);\r\n        if (companyNmRef.current.value === \"\" && ceoNmRef.current.value === \"\") return\r\n        onSetCompany(companyNmRef.current.value, ceoNmRef.current.value);\r\n        onGetCompany();\r\n    }\r\n\r\n    const SelectTag = () => {\r\n        return (\r\n            <div className=\"container text-align-center\">\r\n                <div>\r\n                    <label>검색 결과 개수</label>\r\n                    <select ref={itemRowPageRef} onChange={onChangeItemRowPage} id=\"select-itemPerPage\">\r\n                        <option value=\"1\">1</option>\r\n                        <option value=\"5\">5</option>\r\n                        <option value=\"10\">10</option>\r\n                        <option value=\"20\">20</option>\r\n                        <option value=\"50\">50</option>\r\n                        <option value=\"100\">100</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    const TitleTag = () => {\r\n        return (\r\n            <div className=\"title text-align-center\">\r\n                <h1>\r\n                    영화사\r\n                 </h1>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const InputForm = () => {\r\n        return (\r\n            <div className=\"container text-align-center input \">\r\n                <form className=\"company_form\" onSubmit={onSubmit}>\r\n                    <fieldset className=\"company_fieldset\">\r\n                        <input className=\"input_name\" ref={companyNmRef} type=\"text\" placeholder=\"영화사명\" />\r\n                        <input className=\"input_ceo\" ref={ceoNmRef} type=\"text\" placeholder=\"대표자명\" />\r\n                        <input className=\"input_submit\" type=\"submit\" onSubmit={onSubmit} />\r\n                    </fieldset>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const companyGetMore = () => {\r\n        if (currentPage * itemRowPage !== companyList.length) return\r\n        onPageUp();\r\n        onGetCompany();\r\n    }\r\n\r\n    const CompanyTag = ({ companyList, keyName }) => {\r\n        return (\r\n            <div className=\"companylist_company\">\r\n                {companyList.map((company) => {\r\n                    return (\r\n                        <div key={company[keyName]} className=\"company_wrap\">\r\n                            <div className=\"company_inner\">\r\n                                <Link to={`/company/detail/${company.companyCd}`} className=\"company_inner_top\">\r\n                                    <div className=\"company_poster\">\r\n                                        <span>\r\n                                            <img alt={`회사 ${company.companyNm}의 로고`} />\r\n                                        </span>\r\n                                    </div>\r\n                                </Link>\r\n                                <div className=\"company_inner_bottom\">\r\n                                    <ContentTag content={company} propertyName=\"companyNm\" classNm=\"company_name_ko\" />\r\n                                    <ContentTag content={company} propertyName=\"companyNmEn\" classNm=\"company_name_en\" />\r\n                                    <ContentTag content={company} propertyName=\"companyPartNames\" classNm=\"company_open_dt\" />\r\n                                    <ContentTag content={company} propertyName=\"ceoNm\" classNm=\"company_ceo_name\" />                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    switch (true) {\r\n        case loading && !companyList:\r\n            return (\r\n                <>\r\n                    <TitleTag />\r\n                    <InputForm />\r\n                    <SelectTag />\r\n                    <LoadingBar />\r\n                </>\r\n            )\r\n        case loading && companyList:\r\n            return (\r\n                <>\r\n                    <TitleTag />\r\n                    <InputForm />\r\n                    <SelectTag />\r\n                    <div className=\"companylist\">\r\n                        <div className=\"companyList_wrap\">\r\n                            <CompanyTag keyName=\"companyCd\" companyList={companyList} />\r\n                            <LoadingBarViewMore />\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            )\r\n        case !companyList:\r\n            return (\r\n                <>\r\n                    <TitleTag />\r\n                    <InputForm />\r\n                    <SelectTag />\r\n                </>\r\n            )\r\n        case companyList.length === 0:\r\n            return (\r\n                <>\r\n                    <TitleTag />\r\n                    <InputForm />\r\n                    <SelectTag />\r\n                    <div className=\"text-align-center\">정보 없음</div>\r\n                </>\r\n            )\r\n        case error:\r\n            return (\r\n                <>\r\n                    <TitleTag />\r\n                    <InputForm />\r\n                    <SelectTag />\r\n                    <div className=\"text-align-center\">에러</div>\r\n                </>\r\n            )\r\n        default:\r\n            return (\r\n                <>\r\n                    <TitleTag />\r\n                    <InputForm />\r\n                    <SelectTag />\r\n                    <div className=\"companylist\">\r\n                        <div className=\"companyList_wrap\">\r\n                            <CompanyTag keyName=\"companyCd\" companyList={companyList} />\r\n                            {\r\n                                currentPage * itemRowPage === companyList.length &&\r\n                                <div className=\"view_more_button\">\r\n                                    <button onClick={companyGetMore}><i className=\"fas fa-chevron-circle-down\"></i></button>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            )\r\n    }\r\n}\r\n\r\nexport default Company;","C:\\Users\\user\\react\\movie-search\\src\\container\\CompanyContainer.js",[],"C:\\Users\\user\\react\\movie-search\\src\\modules\\company.js",[],"C:\\Users\\user\\react\\movie-search\\src\\modules\\people.js",[],"C:\\Users\\user\\react\\movie-search\\src\\container\\PeopleContainer.js",[],"C:\\Users\\user\\react\\movie-search\\src\\components\\People.js",["203"],"import { useEffect, useRef } from \"react\"\r\nimport \"./People.css\";\r\nimport { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { LoadingBar, LoadingBarViewMore } from \"../tag/loadingbar/loadingbar.js\";\r\nimport { ContentTag } from \"../tag/contentTag/contentTag.js\";\r\n\r\n\r\nconst People = ({ itemRowPage, peopleFilmo, peopleName, error, onSetItemRowPage, loading, people, onGetPeople, onSetPeople, onPageUp, currentPage }) => {\r\n    const peopleNmRef = useRef();\r\n    const filmoNmRef = useRef();\r\n    const itemRowPageRef = useRef();\r\n\r\n    useEffect(() => {\r\n        peopleNmRef.current.value = peopleName;\r\n        filmoNmRef.current.value = peopleFilmo;\r\n        itemRowPageRef.current.value = itemRowPage;\r\n    });\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (peopleNmRef.current.value === \"\" && filmoNmRef.current.value === \"\") return;\r\n        onSetPeople(peopleNmRef.current.value, filmoNmRef.current.value);\r\n        onSetItemRowPage(itemRowPageRef.current.value);\r\n        onGetPeople();\r\n    }\r\n\r\n    const TitleTag = () => {\r\n        return (\r\n            <div className=\"container text-align-center title_container\">\r\n                <h1>영화인</h1>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const onChangeItemRowPage = (e) => {\r\n        onSetItemRowPage(itemRowPageRef.current.value);\r\n        if (peopleNmRef.current.value === \"\" && filmoNmRef.current.value === \"\") return;\r\n        onSetPeople(peopleNmRef.current.value, filmoNmRef.current.value);\r\n        onGetPeople();\r\n    }\r\n\r\n    const SelectTag = () => {\r\n        return (\r\n            <div className=\"container select_container\">\r\n                <div className=\"text-align-center\">\r\n                    <label>검색 결과 개수</label>\r\n                    <select ref={itemRowPageRef} onChange={onChangeItemRowPage} id=\"select-itemPerPage\">\r\n                        <option value=\"1\">1</option>\r\n                        <option value=\"5\">5</option>\r\n                        <option value=\"10\">10</option>\r\n                        <option value=\"20\">20</option>\r\n                        <option value=\"50\">50</option>\r\n                        <option value=\"100\">100</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const InputForm = () => {\r\n        return (\r\n            <div className=\"container form_container\">\r\n                <form className=\"text-align-center\" onSubmit={onSubmit}>\r\n                    <fieldset className=\"people_fieldset\">\r\n                        <input className=\"input_name\" ref={peopleNmRef} type=\"text\" placeholder=\"영화인명\" />\r\n                        <input className=\"input_filmo\" ref={filmoNmRef} type=\"text\" placeholder=\"출연영화\" />\r\n                        <input className=\"input_submit\" type=\"submit\" onSubmit={onSubmit} />\r\n                    </fieldset>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const PeopleGetMore = () => {\r\n        if (currentPage * itemRowPage !== people.length) return\r\n        onPageUp();\r\n        onGetPeople()\r\n    }\r\n\r\n    const PeopleTag = ({ PeopleList, keyName }) => {\r\n        return (\r\n            <div className=\"peoplelist_people\">\r\n                {PeopleList.map((people) => {\r\n                    return (\r\n                        <div key={people[keyName]} className=\"people_wrap\">\r\n                            <div className=\"people_inner\">\r\n                                <Link to={`/People/detail/${people.peopleCd}`} className=\"people_inner_top\">\r\n                                    <div className=\"people_poster front\">\r\n                                        <span>\r\n                                            <img alt={`배우 ${people.peopleNm}의 사진`} />\r\n                                        </span>\r\n                                    </div>\r\n                                </Link>\r\n                                <div className=\"people_inner_bottom\">\r\n                                    <ContentTag content={people} propertyName=\"peopleNm\" classNm=\"people_name_ko\" />\r\n                                    <ContentTag content={people} propertyName=\"peopleNmEn\" classNm=\"people_name_en\" />\r\n                                    <ContentTag content={people} propertyName=\"repRoleNm\" classNm=\"people_rep_role_nm\" />\r\n                                    <ContentTag content={people} propertyName=\"filmo_names\" classNm=\"people_filmo_names\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    switch (true) {\r\n        case loading && !people:\r\n            return (\r\n                <>\r\n                    <TitleTag />\r\n                    <InputForm />\r\n                    <SelectTag />\r\n                    <LoadingBar />\r\n                </>\r\n            )\r\n        case loading:\r\n            return (\r\n                <>\r\n                    <TitleTag />\r\n                    <InputForm />\r\n                    <SelectTag />\r\n                    <div className=\"peoplelist\">\r\n                        <div className=\"container\">\r\n                            <PeopleTag keyName=\"peopleCd\" PeopleList={people} />\r\n                            < LoadingBarViewMore />\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            )\r\n        case error:\r\n            return (\r\n                <>\r\n                    <TitleTag />\r\n                    <InputForm />\r\n                    <SelectTag />\r\n                    <div className=\"text-align-center\">에러</div>\r\n                </>\r\n            )\r\n        case !people:\r\n            return (\r\n                <>\r\n                    <TitleTag />\r\n                    <InputForm />\r\n                    <SelectTag />\r\n                </>\r\n            )\r\n        case people.length === 0:\r\n            return (\r\n                <>\r\n                    <TitleTag />\r\n                    <InputForm />\r\n                    <SelectTag />\r\n                    <div className=\"text-align-center\">정보 없음</div>\r\n                </>\r\n            )\r\n        default:\r\n            return (\r\n                <>\r\n                    <TitleTag />\r\n                    <InputForm />\r\n                    <SelectTag />\r\n                    <div className=\"peoplelist\">\r\n                        <div className=\"container\">\r\n                            <PeopleTag keyName=\"peopleCd\" PeopleList={people} />\r\n                            {\r\n                                currentPage * itemRowPage === people.length &&\r\n                                <div className=\"view_more_button\">\r\n                                    <button onClick={PeopleGetMore}><i className=\"fas fa-chevron-circle-down\"></i></button>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            )\r\n    }\r\n}\r\n\r\nexport default People;","C:\\Users\\user\\react\\movie-search\\src\\container\\PeopleDetailContainer.js",["204"],"import PeopleDetail from \"../components/PeopleDetail.js\";\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { setPeopleId, getPeopleDetail } from \"../modules/peopleDetail\"\r\nimport { useEffect } from \"react\";\r\n\r\n\r\nconst PeopleDetailContainer = ({ id }) => {\r\n    const { people, loading, error, peopleId } = useSelector(state => ({\r\n        people: state.peopleDetail.peopleDetail.data,\r\n        loading: state.peopleDetail.peopleDetail.loading,\r\n        error: state.peopleDetail.peopleDetail.error,\r\n        peopleId: state.peopleDetail.peopleId,\r\n    }));\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const onSetPeopleId = (peopleId) => {\r\n        dispatch(setPeopleId(peopleId));\r\n    }\r\n\r\n    const onGetPeopleDetail = (peopleId) => {\r\n        dispatch(getPeopleDetail(peopleId));\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (peopleId === id) return\r\n        onSetPeopleId(id);\r\n        onGetPeopleDetail(id);\r\n    }, []);\r\n\r\n    return <PeopleDetail\r\n        loading={loading}\r\n        error={error}\r\n        people={people}\r\n    />\r\n}\r\n\r\nexport default PeopleDetailContainer;","C:\\Users\\user\\react\\movie-search\\src\\components\\PeopleDetail.js",[],"C:\\Users\\user\\react\\movie-search\\src\\modules\\peopleDetail.js",[],"C:\\Users\\user\\react\\movie-search\\src\\modules\\companyDetail.js",[],"C:\\Users\\user\\react\\movie-search\\src\\container\\CompanyDetailContainer.js",["205"],"import CompanyDetail from \"../components/CompanyDetail.js\";\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { getCompanyDetail } from \"../modules/companyDetail.js\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst CompanyDetailContainer = ({ id }) => {\r\n    const { loading, error, company } = useSelector(state => ({\r\n        company: state.companyDetail.companyDetail.data,\r\n        loading: state.companyDetail.companyDetail.loading,\r\n        error: state.companyDetail.companyDetail.error,\r\n    }));\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const onGetCompanyDetail = (companyCd) => {\r\n        dispatch(getCompanyDetail(companyCd));\r\n    }\r\n\r\n    useEffect(() => {\r\n        const param = { id };\r\n        onGetCompanyDetail(param)\r\n    }, [id]);\r\n\r\n    return <CompanyDetail\r\n        loading={loading}\r\n        company={company}\r\n        error={error}\r\n    />\r\n}\r\n\r\nexport default CompanyDetailContainer;","C:\\Users\\user\\react\\movie-search\\src\\components\\CompanyDetail.js",["206"],"import { Link } from \"react-router-dom\";\r\nimport \"./CompanyDetail.css\";\r\nimport { LoadingBar } from \"../tag/loadingbar/loadingbar.js\";\r\nimport { ContentTag, ContentsTag } from \"../tag/contentTag/contentTag.js\";\r\n\r\n\r\nconst CompanyDetail = ({ error, company, loading }) => {\r\n\r\n    const FilmosTag = ({ filmos }) => {\r\n        return (\r\n            <div className=\"company_detail_filmos\">\r\n                {filmos.map((filmo) => {\r\n                    return (\r\n                        <div key={`${Math.random()}${filmo.movieCd}`} className=\"company_detail_filmo\">\r\n                            <Link\r\n                                className=\"movie_link\"\r\n                                to={`/movie/detail/${filmo.movieCd}`}\r\n                            >\r\n                                <div className=\"company_detail_filmo_poster\">\r\n                                    <span>\r\n                                        <img alt={`영화 ${filmo.movieNm}의 포스터`} />\r\n                                    </span>\r\n                                </div>\r\n                            </Link>\r\n                            <div className=\"company_detail_filmo_name\"><h5>{filmo.movieNm}</h5></div>\r\n                            <div className=\"company_detail_filmo_cast\"><h5>{filmo.companyPartNm}</h5></div>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    switch (true) {\r\n        case loading:\r\n            return (\r\n                <LoadingBar />\r\n            )\r\n        case !company:\r\n            return (\r\n                <div className=\"text-align-center\">정보 없음</div>\r\n            )\r\n        case error:\r\n            return (\r\n                <div className=\"text-align-center\">에러</div>\r\n            )\r\n        default:\r\n            return (\r\n                <div className=\"company_detail\">\r\n                    <div className=\"company_detail_box\">\r\n                        <div className=\"company_detail_box_inner\">\r\n                            <div className=\"company_detail_box_inner_top\">\r\n                                <div className=\"company_detail_box_inner_top--left\">\r\n                                    <div className=\"company_detail_poster\">\r\n                                        <span>\r\n                                            <img alt={`${company.companyNm}의 사진`}></img>\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"company_detail_box_inner_top--right\">\r\n                                    <ContentTag content={company} propertyName=\"companyNm\" classNm=\"company_detail_name_ko\" />\r\n                                    <ContentTag content={company} propertyName=\"companyNmEn\" classNm=\"company_detail_name_en\" />\r\n                                    <ContentTag content={company} propertyName=\"ceoNm\" classNm=\"company_detail_ceo_name\" />\r\n                                    <ContentsTag contents={company.parts} propertyName=\"companyPartNm\" childClassNm=\"company_part\" classNm=\"company_detail_parts\" childClassNm=\"company_part\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"company_detail_box_inner_bottom\">\r\n                                <div className=\"company_detail_box_inner_botom--all\">\r\n                                    <div className=\"company_detail_box_filmo_perpace\"><h3>필모리스트</h3></div>\r\n                                    <FilmosTag filmos={company.filmos} />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n    }\r\n}\r\n\r\nexport default CompanyDetail;","C:\\Users\\user\\react\\movie-search\\src\\pages\\BoxOfficePage.js",[],"C:\\Users\\user\\react\\movie-search\\src\\pages\\MovieDetailPage.js",[],"C:\\Users\\user\\react\\movie-search\\src\\pages\\MovieListPage.js",[],"C:\\Users\\user\\react\\movie-search\\src\\pages\\CompanyPage.js",[],"C:\\Users\\user\\react\\movie-search\\src\\pages\\CompanyDetailPage.js",[],"C:\\Users\\user\\react\\movie-search\\src\\pages\\PeopleDetailPage.js",[],"C:\\Users\\user\\react\\movie-search\\src\\pages\\PeoplePage.js",[],"C:\\Users\\user\\react\\movie-search\\src\\api\\boxOffice.js",[],"C:\\Users\\user\\react\\movie-search\\src\\api\\key.js",[],"C:\\Users\\user\\react\\movie-search\\src\\api\\company.js",[],"C:\\Users\\user\\react\\movie-search\\src\\api\\companyDetail.js",[],"C:\\Users\\user\\react\\movie-search\\src\\api\\movieDetail.js",[],"C:\\Users\\user\\react\\movie-search\\src\\api\\movieList.js",[],"C:\\Users\\user\\react\\movie-search\\src\\api\\people.js",[],"C:\\Users\\user\\react\\movie-search\\src\\api\\peopleDetail.js",[],"C:\\Users\\user\\react\\movie-search\\src\\lib\\asyncUtils.js",[],"C:\\Users\\user\\react\\movie-search\\src\\tag\\bookmarkTag\\BookmarkTag.js",[],"C:\\Users\\user\\react\\movie-search\\src\\tag\\loadingbar\\loadingbar.js",[],"C:\\Users\\user\\react\\movie-search\\src\\tag\\contentTag\\contentTag.js",[],{"ruleId":"207","replacedBy":"208"},{"ruleId":"209","replacedBy":"210"},{"ruleId":"211","severity":1,"message":"212","line":1,"column":10,"nodeType":"213","messageId":"214","endLine":1,"endColumn":19},{"ruleId":"211","severity":1,"message":"215","line":1,"column":21,"nodeType":"213","messageId":"214","endLine":1,"endColumn":27},{"ruleId":"211","severity":1,"message":"216","line":1,"column":29,"nodeType":"213","messageId":"214","endLine":1,"endColumn":37},{"ruleId":"217","severity":1,"message":"218","line":29,"column":8,"nodeType":"219","endLine":29,"endColumn":12,"suggestions":"220"},{"ruleId":"211","severity":1,"message":"216","line":2,"column":29,"nodeType":"213","messageId":"214","endLine":2,"endColumn":37},{"ruleId":"211","severity":1,"message":"216","line":3,"column":10,"nodeType":"213","messageId":"214","endLine":3,"endColumn":18},{"ruleId":"211","severity":1,"message":"216","line":3,"column":10,"nodeType":"213","messageId":"214","endLine":3,"endColumn":18},{"ruleId":"217","severity":1,"message":"221","line":29,"column":8,"nodeType":"219","endLine":29,"endColumn":10,"suggestions":"222"},{"ruleId":"217","severity":1,"message":"223","line":22,"column":8,"nodeType":"219","endLine":22,"endColumn":12,"suggestions":"224"},{"ruleId":"225","severity":1,"message":"226","line":64,"column":163,"nodeType":"227","endLine":64,"endColumn":190},"no-native-reassign",["228"],"no-negated-in-lhs",["229"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'movieId' and 'onGetMovie'. Either include them or remove the dependency array.","ArrayExpression",["230"],"React Hook useEffect has missing dependencies: 'id', 'onGetPeopleDetail', 'onSetPeopleId', and 'peopleId'. Either include them or remove the dependency array.",["231"],"React Hook useEffect has a missing dependency: 'onGetCompanyDetail'. Either include it or remove the dependency array.",["232"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"233","fix":"234"},{"desc":"235","fix":"236"},{"desc":"237","fix":"238"},"Update the dependencies array to be: [id, movieId, onGetMovie]",{"range":"239","text":"240"},"Update the dependencies array to be: [id, onGetPeopleDetail, onSetPeopleId, peopleId]",{"range":"241","text":"242"},"Update the dependencies array to be: [id, onGetCompanyDetail]",{"range":"243","text":"244"},[885,889],"[id, movieId, onGetMovie]",[937,939],"[id, onGetPeopleDetail, onSetPeopleId, peopleId]",[760,764],"[id, onGetCompanyDetail]"]