[{"C:\\Users\\user\\react\\movie-search\\src\\index.js":"1","C:\\Users\\user\\react\\movie-search\\src\\App.js":"2","C:\\Users\\user\\react\\movie-search\\src\\reportWebVitals.js":"3","C:\\Users\\user\\react\\movie-search\\src\\modules\\index.js":"4","C:\\Users\\user\\react\\movie-search\\src\\modules\\boxOffice.js":"5","C:\\Users\\user\\react\\movie-search\\src\\container\\BoxOfficeContainer.js":"6","C:\\Users\\user\\react\\movie-search\\src\\components\\BoxOffice.js":"7","C:\\Users\\user\\react\\movie-search\\src\\container\\NavbarContainer.js":"8","C:\\Users\\user\\react\\movie-search\\src\\components\\Navbar.js":"9","C:\\Users\\user\\react\\movie-search\\src\\components\\MovieDetail.js":"10","C:\\Users\\user\\react\\movie-search\\src\\container\\MovieDetailContainer.js":"11","C:\\Users\\user\\react\\movie-search\\src\\modules\\movieDetail.js":"12","C:\\Users\\user\\react\\movie-search\\src\\modules\\movieList.js":"13","C:\\Users\\user\\react\\movie-search\\src\\container\\MovieListContainer.js":"14","C:\\Users\\user\\react\\movie-search\\src\\components\\MovieList.js":"15","C:\\Users\\user\\react\\movie-search\\src\\components\\Company.js":"16","C:\\Users\\user\\react\\movie-search\\src\\container\\CompanyContainer.js":"17","C:\\Users\\user\\react\\movie-search\\src\\modules\\company.js":"18","C:\\Users\\user\\react\\movie-search\\src\\modules\\people.js":"19","C:\\Users\\user\\react\\movie-search\\src\\container\\PeopleContainer.js":"20","C:\\Users\\user\\react\\movie-search\\src\\components\\People.js":"21","C:\\Users\\user\\react\\movie-search\\src\\container\\PeopleDetailContainer.js":"22","C:\\Users\\user\\react\\movie-search\\src\\components\\PeopleDetail.js":"23","C:\\Users\\user\\react\\movie-search\\src\\modules\\peopleDetail.js":"24","C:\\Users\\user\\react\\movie-search\\src\\modules\\companyDetail.js":"25","C:\\Users\\user\\react\\movie-search\\src\\container\\CompanyDetailContainer.js":"26","C:\\Users\\user\\react\\movie-search\\src\\components\\CompanyDetail.js":"27","C:\\Users\\user\\react\\movie-search\\src\\api\\loadingbar\\loadingbar.js":"28","C:\\Users\\user\\react\\movie-search\\src\\api\\contentTag\\contentTag.js":"29","C:\\Users\\user\\react\\movie-search\\src\\api\\bookmarkTag\\bookmarkTag.js":"30","C:\\Users\\user\\react\\movie-search\\src\\api\\bookmarkTag\\BookmarkTag.js":"31"},{"size":538,"mtime":1609593902783,"results":"32","hashOfConfig":"33"},{"size":1311,"mtime":1612010214822,"results":"34","hashOfConfig":"33"},{"size":362,"mtime":1608243964160,"results":"35","hashOfConfig":"33"},{"size":528,"mtime":1611265128212,"results":"36","hashOfConfig":"33"},{"size":2499,"mtime":1611937628580,"results":"37","hashOfConfig":"33"},{"size":1266,"mtime":1611535292976,"results":"38","hashOfConfig":"33"},{"size":7073,"mtime":1612010534587,"results":"39","hashOfConfig":"33"},{"size":158,"mtime":1609791121278,"results":"40","hashOfConfig":"33"},{"size":1598,"mtime":1612010826087,"results":"41","hashOfConfig":"33"},{"size":4790,"mtime":1611936840953,"results":"42","hashOfConfig":"33"},{"size":1130,"mtime":1611936762000,"results":"43","hashOfConfig":"33"},{"size":1875,"mtime":1611240747564,"results":"44","hashOfConfig":"33"},{"size":3562,"mtime":1611936429146,"results":"45","hashOfConfig":"33"},{"size":1340,"mtime":1611830594875,"results":"46","hashOfConfig":"33"},{"size":7195,"mtime":1611936397319,"results":"47","hashOfConfig":"33"},{"size":6450,"mtime":1611937013717,"results":"48","hashOfConfig":"33"},{"size":1246,"mtime":1611830671316,"results":"49","hashOfConfig":"33"},{"size":3429,"mtime":1611883125094,"results":"50","hashOfConfig":"33"},{"size":3350,"mtime":1611937185743,"results":"51","hashOfConfig":"33"},{"size":1243,"mtime":1611831626356,"results":"52","hashOfConfig":"33"},{"size":6122,"mtime":1611937416818,"results":"53","hashOfConfig":"33"},{"size":1135,"mtime":1611881225944,"results":"54","hashOfConfig":"33"},{"size":3120,"mtime":1611937231184,"results":"55","hashOfConfig":"33"},{"size":2050,"mtime":1611698031313,"results":"56","hashOfConfig":"33"},{"size":1798,"mtime":1611805606349,"results":"57","hashOfConfig":"33"},{"size":928,"mtime":1611805615843,"results":"58","hashOfConfig":"33"},{"size":3386,"mtime":1611937036888,"results":"59","hashOfConfig":"33"},{"size":422,"mtime":1611879908214,"results":"60","hashOfConfig":"33"},{"size":804,"mtime":1611936638710,"results":"61","hashOfConfig":"33"},{"size":425,"mtime":1611941309815,"results":"62","hashOfConfig":"33"},{"size":541,"mtime":1612010683377,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"1b3rb90",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"66"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"66"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"66"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"66"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"66"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"66"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"66"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"C:\\Users\\user\\react\\movie-search\\src\\index.js",[],["134","135"],"C:\\Users\\user\\react\\movie-search\\src\\App.js",[],"C:\\Users\\user\\react\\movie-search\\src\\reportWebVitals.js",[],"C:\\Users\\user\\react\\movie-search\\src\\modules\\index.js",[],"C:\\Users\\user\\react\\movie-search\\src\\modules\\boxOffice.js",[],"C:\\Users\\user\\react\\movie-search\\src\\container\\BoxOfficeContainer.js",[],"C:\\Users\\user\\react\\movie-search\\src\\components\\BoxOffice.js",[],"C:\\Users\\user\\react\\movie-search\\src\\container\\NavbarContainer.js",[],"C:\\Users\\user\\react\\movie-search\\src\\components\\Navbar.js",[],"C:\\Users\\user\\react\\movie-search\\src\\components\\MovieDetail.js",["136","137","138"],"import { useEffect, useRef, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./MovieDetail.css\";\r\nimport { LoadingBar } from \"../api/loadingbar/loadingbar.js\";\r\nimport { ContentTag, ContentsTag } from \"../api/contentTag/contentTag.js\";\r\n\r\n\r\nconst MovieDetail = ({ movie, error, loading }) => {\r\n\r\n    if (loading) return <LoadingBar />;\r\n    if (!movie) return <div>정보없음</div>;\r\n\r\n    const { movieInfo } = movie.movieInfoResult;\r\n\r\n    const MovieTitleTag = ({ movieName, moviePrdYear }) => {\r\n        return (\r\n            <div className=\"movie_title\">\r\n                <div className=\"movie_name\">\r\n                    <h1>{movieName}</h1>\r\n                </div>\r\n                <div className=\"movie_prdt_year\">\r\n                    <h3>({moviePrdYear})</h3>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const MovieActorsTag = ({ actors }) => {\r\n        return (\r\n            <div className=\"movie_actors\">\r\n                {actors.map((actor, index) => {\r\n                    return (\r\n                        <div key={index} className=\"movie_actor\">\r\n                            <div className=\"movie_actor_profile\">\r\n                                <span><img alt={`${actor.peopleNm}의 사진`}></img></span>\r\n                            </div>\r\n                            <div className=\"movie_actor_name\"><h5>{actor.peopleNm}</h5></div>\r\n                            {\r\n                                actor.cast !== \"\" &&\r\n                                <div className=\"movie_actor_cast\"><h5>{actor.cast} 역</h5></div>\r\n                            }\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const movieOpenDate = (openDate) => {\r\n        const year = openDate.substring(0, 4);\r\n        const month = openDate.substring(4, 6);\r\n        const day = openDate.substring(6, 8);\r\n        return `${year}년 ${month}월 ${day}일`\r\n    }\r\n\r\n    const MovieCompanysTag = ({ companys }) => {\r\n        return (\r\n            <div className=\"companys\">\r\n                {companys.map((company) => {\r\n                    return (\r\n                        <div key={Math.random()}>\r\n                            <Link to={`/company/detail/${company.companyCd}`}>\r\n                                <div className=\"company\">\r\n                                    <h5>\r\n                                        {company.companyPartNm} - {company.companyNm}\r\n                                    </h5>\r\n                                </div>\r\n                            </Link>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"movie\">\r\n                <MovieTitleTag movieName={movieInfo.movieNm} moviePrdYear={movieInfo.prdtYear} />\r\n                <div className=\"movie_box\">\r\n                    <div className=\"movie_box_inner\">\r\n                        <div className=\"movie_box_inner_top\">\r\n                            <div className=\"movie_box_inner_top--left\">\r\n                                <div className=\"movie_poster\">\r\n                                    <span>\r\n                                        <img alt={`영화 ${movieInfo.movieNm}의 포스터`}></img>\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"movie_box_inner_top--right\">\r\n                                <ContentTag content={movieInfo} classNm=\"movie_show_time\" propertyName=\"showTm\" />\r\n                                <ContentTag content={movieInfo} callbackFn={movieOpenDate} classNm=\"movie_open_date\" propertyName=\"openDt\" />\r\n                                <ContentsTag contents={movieInfo.nations} childClassNm=\"movie_nation\" classNm=\"movie_nations\" propertyName=\"nationNm\" />\r\n                                <ContentsTag contents={movieInfo.genres} childClassNm=\"movie_genre\" classNm=\"movie_genres\" propertyName=\"genreNm\" />\r\n                                <ContentsTag contents={movieInfo.directors} childClassNm=\"movie_director\" classNm=\"movie_directors\" propertyName=\"peopleNm\" />\r\n                                <MovieCompanysTag companys={movieInfo.companys} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"movie_box_inner_bottom\">\r\n                            <div className=\"actors_title\"><h3>참여 배우</h3></div>\r\n                            <MovieActorsTag actors={movieInfo.actors} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MovieDetail;","C:\\Users\\user\\react\\movie-search\\src\\container\\MovieDetailContainer.js",["139"],"import { useDispatch, useSelector } from \"react-redux\"\r\nimport { getMovie, setMovieCd } from \"../modules/movieDetail.js\";\r\nimport MovieDetail from \"../components/MovieDetail.js\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst MovieDetailContainer = ({ match }) => {\r\n    const { movie, movieId, error, loading } = useSelector(state => ({\r\n        movie: state.movieDetail.movie.data,\r\n        loading: state.movieDetail.movie.loading,\r\n        error: state.movieDetail.movie.error,\r\n        movieId: state.movieDetail.movieId,\r\n    }));\r\n\r\n    const { id } = match.params;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const onGetMovie = (pMovieId) => {\r\n        dispatch(getMovie(pMovieId));\r\n    };\r\n\r\n    const onSetMovieId = (id) => {\r\n        setMovieCd(id);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (movieId === id) return\r\n        onSetMovieId(id);\r\n        onGetMovie(id);\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <MovieDetail\r\n                movie={movie}\r\n                error={error}\r\n                loading={loading}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieDetailContainer;","C:\\Users\\user\\react\\movie-search\\src\\modules\\movieDetail.js",[],"C:\\Users\\user\\react\\movie-search\\src\\modules\\movieList.js",[],"C:\\Users\\user\\react\\movie-search\\src\\container\\MovieListContainer.js",[],"C:\\Users\\user\\react\\movie-search\\src\\components\\MovieList.js",["140"],"import \"./MovieList.css\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { LoadingBar, LoadingBarViewMore } from \"../api/loadingbar/loadingbar.js\";\r\nimport { ContentTag } from \"../api/contentTag/contentTag.js\";\r\n\r\n\r\nconst MovieList = ({ onSetItemRowPage, onGetMovieList, movieList, loading, onSetMovieList, onPageUp, currentPage }) => {\r\n    const movieNmRef = useRef();\r\n    const directorNmRef = useRef();\r\n    const itemRowPageRef = useRef(10);\r\n\r\n    const [itemRowPage, setItemRowPage] = useState(10);\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (movieNmRef.current.value === \"\" && directorNmRef.current.value === \"\") return\r\n        onSetMovieList(movieNmRef.current.value, directorNmRef.current.value)\r\n        onSetItemRowPage(itemRowPage);\r\n        itemRowPageRef.current = itemRowPage;\r\n        onGetMovieList();\r\n    }\r\n\r\n    const onChangeItemRowPage = (e) => {\r\n        setItemRowPage(e.target.value);\r\n    }\r\n\r\n    const TitleTag = () => {\r\n        return (\r\n            <div className=\"container title text-align-center\">\r\n                <h1>\r\n                    영화검색\r\n                </h1>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const SelectTag = () => {\r\n        return (\r\n            <div className=\"container text-align-center\">\r\n                <div>\r\n                    <label>검색 결과 개수</label>\r\n                    <select value={itemRowPage} onChange={onChangeItemRowPage} id=\"select-itemPerPage\">\r\n                        <option value=\"1\">1</option>\r\n                        <option value=\"5\">5</option>\r\n                        <option value=\"10\">10</option>\r\n                        <option value=\"20\">20</option>\r\n                        <option value=\"50\">50</option>\r\n                        <option value=\"100\">100</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const InputForm = () => {\r\n        return (\r\n            <div className=\"container input text-align-center\">\r\n                <form className=\"movielist_form\" onSubmit={onSubmit} type=\"submit\">\r\n                    <fieldset className=\"movielist_fieldset\">\r\n                        <input className=\"input_title\" ref={movieNmRef} placeholder=\"제목\" type=\"text\" />\r\n                        <input className=\"input_director\" ref={directorNmRef} placeholder=\"감독\" type=\"text\" />\r\n                        <input className=\"input_submit\" type=\"submit\" />\r\n                    </fieldset>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const addOpenDate = (pString) => {\r\n        const year = `${pString[0]}${pString[1]}${pString[2]}${pString[3]}년`;\r\n        const month = `${pString[4]}${pString[5]}월`;\r\n        const day = `${pString[6]}${pString[7]}일`;\r\n        return `${year} ${month} ${day}`;\r\n    }\r\n\r\n    const movieGetMore = () => {\r\n        if (currentPage * itemRowPageRef.current !== movieList.length) return\r\n        onPageUp();\r\n        onGetMovieList();\r\n    }\r\n\r\n    const MovieTag = ({ movieList }) => {\r\n        return (\r\n            <div className=\"movielist_movie\">\r\n                {movieList.map((movie) => {\r\n                    return (\r\n                        <div key={movie.movieCd} className=\"movielist_movie_wrap\">\r\n                            <div className=\"movielist_movie_inner\">\r\n                                <Link to={`/movie/detail/${movie.movieCd}`} className=\"movielist_movie_inner_top\">\r\n                                    <div className=\"movielist_movie_poster front\">\r\n                                        <span>\r\n                                            <img alt={`영화 ${movie.movieNm}의 포스터`} />\r\n                                        </span>\r\n                                    </div>\r\n                                </Link>\r\n                                <div className=\"movielist_movie_inner_bottom\">\r\n                                    <ContentTag content={movie} propertyName=\"movieNm\" classNm=\"movielist_movie_name_ko\" />\r\n                                    <ContentTag content={movie} propertyName=\"movieNmEn\" classNm=\" movielist_movie_name_en\" />\r\n                                    <ContentTag content={movie} callbackFn={addOpenDate} propertyName=\"openDt\" classNm=\"movielist_movie_open_dt\" />\r\n                                    <ContentTag content={movie} propertyName=\"prdtYear\" classNm=\"movielist_movie_prdt_year\" />\r\n                                    <ContentTag content={movie} propertyName=\"prdtStatNm\" classNm=\"movielist_movie_prdt_stat_nm\" />\r\n                                    <ContentTag content={movie} propertyName=\"repNationNm\" classNm=\"movielist_movie_rep_nation_mm\" />\r\n                                    <ContentTag content={movie} propertyName=\"repGenreNm\" classNm=\"movielist_movie_rep_genre_nm\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    switch (true) {\r\n        case loading && !movieList:\r\n            return (\r\n                <>\r\n                    <TitleTag />\r\n                    <InputForm />\r\n                    <SelectTag />\r\n                    <LoadingBar />\r\n                </>\r\n            )\r\n        case loading:\r\n            return (\r\n                <div>\r\n                    <TitleTag />\r\n                    <InputForm />\r\n                    <SelectTag />\r\n                    <div className=\"movielist\">\r\n                        <div className=\"container\">\r\n                            <MovieTag movieList={movieList} />\r\n                            <LoadingBarViewMore />\r\n                        </div>\r\n                    </div>\r\n                </div >\r\n            )\r\n        case !movieList:\r\n            return (\r\n                <>\r\n                    <TitleTag />\r\n                    <InputForm />\r\n                    <SelectTag />\r\n                </>\r\n            )\r\n        case movieList.length === 0:\r\n            return (\r\n                <>\r\n                    <TitleTag />\r\n                    <InputForm />\r\n                    <SelectTag />\r\n                    <div>정보없음</div>\r\n                </>\r\n            )\r\n        default:\r\n            return (\r\n                <div>\r\n                    <TitleTag />\r\n                    <InputForm />\r\n                    <SelectTag />\r\n                    <div className=\"movielist\">\r\n                        <div className=\"container\">\r\n                            <MovieTag movieList={movieList} />\r\n                            {\r\n                                currentPage * itemRowPageRef.current === movieList.length &&\r\n                                <div className=\"view_more_button\">\r\n                                    <button onClick={movieGetMore}><i className=\"fas fa-chevron-circle-down\"></i></button>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div >\r\n            )\r\n    }\r\n}\r\n\r\nexport default MovieList;","C:\\Users\\user\\react\\movie-search\\src\\components\\Company.js",[],"C:\\Users\\user\\react\\movie-search\\src\\container\\CompanyContainer.js",[],"C:\\Users\\user\\react\\movie-search\\src\\modules\\company.js",[],"C:\\Users\\user\\react\\movie-search\\src\\modules\\people.js",[],"C:\\Users\\user\\react\\movie-search\\src\\container\\PeopleContainer.js",[],"C:\\Users\\user\\react\\movie-search\\src\\components\\People.js",[],"C:\\Users\\user\\react\\movie-search\\src\\container\\PeopleDetailContainer.js",["141"],"import PeopleDetail from \"../components/PeopleDetail.js\";\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { setPeopleId, getPeopleDetail } from \"../modules/peopleDetail\"\r\nimport { useEffect } from \"react\";\r\n\r\n\r\nconst PeopleDetailContainer = ({ match }) => {\r\n    const { people, loading, error, peopleId } = useSelector(state => ({\r\n        people: state.peopleDetail.peopleDetail.data,\r\n        loading: state.peopleDetail.peopleDetail.loading,\r\n        error: state.peopleDetail.peopleDetail.error,\r\n        peopleId: state.peopleDetail.peopleId,\r\n    }));\r\n\r\n    const { id } = match.params;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const onSetPeopleId = (peopleId) => {\r\n        dispatch(setPeopleId(peopleId));\r\n    }\r\n\r\n    const onGetPeopleDetail = (peopleId) => {\r\n        dispatch(getPeopleDetail(peopleId));\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (peopleId === id) return\r\n        onGetPeopleDetail(id);\r\n        onSetPeopleId(id);\r\n    }, []);\r\n\r\n    return <PeopleDetail\r\n        loading={loading}\r\n        error={error}\r\n        people={people}\r\n    />\r\n}\r\n\r\nexport default PeopleDetailContainer;","C:\\Users\\user\\react\\movie-search\\src\\components\\PeopleDetail.js",[],"C:\\Users\\user\\react\\movie-search\\src\\modules\\peopleDetail.js",["142"],"const GET_PEOPLE = \"PeopleDetail/GET_PEOPLE\";\r\nconst GET_PEOPLE_ID = \"PeopleDetail/GET_PEOPLE_ID\";\r\nconst GET_PEOPLE_SUCCESS = \"PeopleDetail/GET_PEOPLE_SUCCESS\";\r\nconst GET_PEOPLE_ERROR = \"PeopleDetail/GET_PEOPLE_ERROR\";\r\nconst SET_PEOPLE_ID = \"PeopleDetail/SET_PEOPLE_ID\";\r\n\r\nexport const setPeopleId = (peopleId) => {\r\n    return { type: SET_PEOPLE_ID, peopleId }\r\n}\r\n\r\nexport const getPeopleDetail = (pPeopleId = \"\") => async dispatch => {\r\n    dispatch({ type: GET_PEOPLE });\r\n    try {\r\n        const data = await getPeopleDetailData(pPeopleId);\r\n        dispatch({ type: GET_PEOPLE_SUCCESS, data })\r\n    } catch (e) {\r\n        dispatch({ type: GET_PEOPLE_ERROR });\r\n    }\r\n}\r\n\r\n\r\nconst getPeopleDetailData = async (pPeopleId) => {\r\n    const peopleCd = pPeopleId !== \"\" ? `&peopleCd=${pPeopleId}` : \"\";\r\n    const res = await fetch(`http://kobis.or.kr/kobisopenapi/webservice/rest/people/searchPeopleInfo.json?key=7c88cc83cd33def078fa2c0580e6045c${peopleCd}`)\r\n    const jsonRes = await res.json();\r\n    const sendData = jsonRes.peopleInfoResult.peopleInfo;\r\n    return sendData;\r\n}\r\n\r\nconst initialState = {\r\n    peopleDetail: {\r\n        loading: false,\r\n        data: null,\r\n        error: null,\r\n    },\r\n    peopleId: null,\r\n}\r\n\r\nconst PeopleDetail = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_PEOPLE_ID: {\r\n            return {\r\n                ...state,\r\n                peopleId: action.peopleId,\r\n            }\r\n        }\r\n        case GET_PEOPLE: {\r\n            return {\r\n                peopleDetail: { ...state.peopleDetail, loading: true }\r\n            };\r\n        }\r\n        case GET_PEOPLE_SUCCESS: {\r\n            return {\r\n                peopleDetail: { ...state.peopleDetail, data: action.data, loading: false }\r\n            };\r\n        }\r\n        case GET_PEOPLE_ERROR: {\r\n            return {\r\n                peopleDetail: { ...state.peopleDetail, error: action.error, loading: false }\r\n            };\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default PeopleDetail;","C:\\Users\\user\\react\\movie-search\\src\\modules\\companyDetail.js",[],"C:\\Users\\user\\react\\movie-search\\src\\container\\CompanyDetailContainer.js",["143","144"],"import CompanyDetail from \"../components/CompanyDetail.js\";\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { getCompanyDetail } from \"../modules/companyDetail.js\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst CompanyDetailContainer = ({ match }) => {\r\n    const { loading, error, company } = useSelector(state => ({\r\n        company: state.companyDetail.companyDetail.data,\r\n        loading: state.companyDetail.companyDetail.loading,\r\n        error: state.companyDetail.companyDetail.error,\r\n    }));\r\n\r\n    const { companyid } = match.params;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const onGetCompanyDetail = (companyCd) => {\r\n        dispatch(getCompanyDetail(companyCd));\r\n    }\r\n\r\n    useEffect(() => {\r\n        onGetCompanyDetail(companyid)\r\n    }, [companyid]);\r\n\r\n    return <CompanyDetail\r\n        loading={loading}\r\n        company={company}\r\n    />\r\n}\r\n\r\nexport default CompanyDetailContainer;","C:\\Users\\user\\react\\movie-search\\src\\components\\CompanyDetail.js",["145"],"import { Link } from \"react-router-dom\";\r\nimport \"./CompanyDetail.css\";\r\nimport { LoadingBar } from \"../api/loadingbar/loadingbar.js\";\r\nimport { ContentTag, ContentsTag } from \"../api/contentTag/contentTag.js\";\r\n\r\n\r\nconst CompanyDetail = ({ company, loading }) => {\r\n\r\n    if (loading) {\r\n        return <LoadingBar />\r\n    }\r\n\r\n    if (!company) {\r\n        return (\r\n            <>\r\n                <div>정보 없음</div>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const FilmosTag = ({ filmos }) => {\r\n        return (\r\n            <div className=\"company_detail_filmos\">\r\n                {filmos.map((filmo) => {\r\n                    return (\r\n                        <div key={`${filmo.movieCd}`} className=\"company_detail_filmo\">\r\n                            <Link\r\n                                className=\"movie_link\"\r\n                                to={`/movie/detail/${filmo.movieCd}`}\r\n                            >\r\n                                <div className=\"company_detail_filmo_poster\">\r\n                                    <span>\r\n                                        <img alt={`영화 ${filmo.movieNm}의 포스터`} />\r\n                                    </span>\r\n                                </div>\r\n                            </Link>\r\n                            <div className=\"company_detail_filmo_name\"><h5>{filmo.movieNm}</h5></div>\r\n                            <div className=\"company_detail_filmo_cast\"><h5>{filmo.companyPartNm}</h5></div>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"company_detail\">\r\n            <div className=\"company_detail_box\">\r\n                <div className=\"company_detail_box_inner\">\r\n                    <div className=\"company_detail_box_inner_top\">\r\n                        <div className=\"company_detail_box_inner_top--left\">\r\n                            <div className=\"company_detail_poster\">\r\n                                <span>\r\n                                    <img alt={`${company.companyNm}의 사진`}></img>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"company_detail_box_inner_top--right\">\r\n                            <ContentTag content={company} propertyName=\"companyNm\" classNm=\"company_detail_name_ko\" />\r\n                            <ContentTag content={company} propertyName=\"companyNmEn\" classNm=\"company_detail_name_en\" />\r\n                            <ContentTag content={company} propertyName=\"ceoNm\" classNm=\"company_detail_ceo_name\" />\r\n                            <ContentsTag contents={company.parts} propertyName=\"companyPartNm\" childClassNm=\"company_part\" classNm=\"company_detail_parts\" childClassNm=\"company_part\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"company_detail_box_inner_bottom\">\r\n                        <div className=\"company_detail_box_inner_botom--all\">\r\n                            <div className=\"company_detail_box_filmo_perpace\"><h3>필모리스트</h3></div>\r\n                            <FilmosTag filmos={company.filmos} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CompanyDetail;","C:\\Users\\user\\react\\movie-search\\src\\api\\loadingbar\\loadingbar.js",[],"C:\\Users\\user\\react\\movie-search\\src\\api\\contentTag\\contentTag.js",[],"C:\\Users\\user\\react\\movie-search\\src\\api\\bookmarkTag\\bookmarkTag.js",["146","147"],"C:\\Users\\user\\react\\movie-search\\src\\api\\bookmarkTag\\BookmarkTag.js",[],{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","severity":1,"message":"153","line":1,"column":10,"nodeType":"154","messageId":"155","endLine":1,"endColumn":19},{"ruleId":"152","severity":1,"message":"156","line":1,"column":21,"nodeType":"154","messageId":"155","endLine":1,"endColumn":27},{"ruleId":"152","severity":1,"message":"157","line":1,"column":29,"nodeType":"154","messageId":"155","endLine":1,"endColumn":37},{"ruleId":"158","severity":1,"message":"159","line":30,"column":8,"nodeType":"160","endLine":30,"endColumn":10,"suggestions":"161"},{"ruleId":"152","severity":1,"message":"153","line":2,"column":10,"nodeType":"154","messageId":"155","endLine":2,"endColumn":19},{"ruleId":"158","severity":1,"message":"162","line":31,"column":8,"nodeType":"160","endLine":31,"endColumn":10,"suggestions":"163"},{"ruleId":"152","severity":1,"message":"164","line":2,"column":7,"nodeType":"154","messageId":"155","endLine":2,"endColumn":20},{"ruleId":"152","severity":1,"message":"165","line":7,"column":22,"nodeType":"154","messageId":"155","endLine":7,"endColumn":27},{"ruleId":"158","severity":1,"message":"166","line":23,"column":8,"nodeType":"160","endLine":23,"endColumn":19,"suggestions":"167"},{"ruleId":"168","severity":1,"message":"169","line":62,"column":155,"nodeType":"170","endLine":62,"endColumn":182},{"ruleId":"171","severity":1,"message":"172","line":4,"column":13,"nodeType":"173","endLine":4,"endColumn":53},{"ruleId":"171","severity":1,"message":"172","line":5,"column":13,"nodeType":"173","endLine":5,"endColumn":59},"no-native-reassign",["174"],"no-negated-in-lhs",["175"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'id', 'movieId', and 'onGetMovie'. Either include them or remove the dependency array.","ArrayExpression",["176"],"React Hook useEffect has missing dependencies: 'id', 'onGetPeopleDetail', 'onSetPeopleId', and 'peopleId'. Either include them or remove the dependency array.",["177"],"'GET_PEOPLE_ID' is assigned a value but never used.","'error' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'onGetCompanyDetail'. Either include it or remove the dependency array.",["178"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},"Update the dependencies array to be: [id, movieId, onGetMovie]",{"range":"185","text":"186"},"Update the dependencies array to be: [id, onGetPeopleDetail, onSetPeopleId, peopleId]",{"range":"187","text":"188"},"Update the dependencies array to be: [companyid, onGetCompanyDetail]",{"range":"189","text":"190"},[890,892],"[id, movieId, onGetMovie]",[976,978],"[id, onGetPeopleDetail, onSetPeopleId, peopleId]",[779,790],"[companyid, onGetCompanyDetail]"]