{"version":3,"sources":["api/loadingbar/loadingbar.js","api/contentTag/contentTag.js","components/BoxOffice.js","api/rest/rest.js","modules/boxOffice.js","container/BoxOfficeContainer.js","modules/movieDetail.js","components/MovieDetail.js","container/MovieDetailContainer.js","api/bookmarkTag/BookmarkTag.js","components/Navbar.js","container/NavbarContainer.js","components/MovieList.js","modules/movieList.js","container/MovieListContainer.js","components/Company.js","modules/company.js","container/CompanyContainer.js","components/CompanyDetail.js","modules/companyDetail.js","container/CompanyDetailContainer.js","components/People.js","modules/people.js","container/PeopleContainer.js","components/PeopleDetail.js","modules/peopleDetail.js","container/PeopleDetailContainer.js","App.js","reportWebVitals.js","modules/index.js","index.js"],"names":["LoadingBar","className","LoadingBarViewMore","ContentTag","classNm","propertyName","content","callbackFn","contextText","ContentsTag","childClassNm","contents","keyName","map","Math","random","BoxOffice","movieList","getBoxOffice","loading","error","onGetData","onSetSortData","useState","date","setDate","sortButtonGroupRef","useRef","sortBurrontActiveIndex","onChange","e","preventDefault","target","value","sortData","index","current","onDateSubmit","TitleTag","SearchTag","onSubmit","type","SortButtonTag","text","setSort","isActive","onClick","SortButtonGroupTag","ref","HeaderTag","addToContour","pString","sendString","currentIndex","length","i","MovieTag","movie","to","movieCd","alt","movieNm","apiKey","peopleRest","GET_BOXOFFICE","GET_BOXOFFICE_SUCCESS","GET_BOXOFFICE_ERROR","GET_DATE","SET_SORT_DATE","initialState","boxOffice","data","state","action","dataToSort","dataClone","slice","sortedData","sort","a","b","parseInt","replace","BoxOfficeContainer","useSelector","dispatch","useDispatch","getState","targetDate","fetch","res","json","resJson","boxOfficeResult","dailyBoxOfficeList","filterdDate","split","year","month","day","sendDate","getData","setSortData","GET_MOVIE_DETAIL_ID","GET_MOVIE_DETAIL","GET_MOVIE_DETAIL_SUCCESS","GET_MOVIE_DETAIL_ERROR","movieId","movieDetail","MovieDetail","movieInfo","movieInfoResult","MovieTitleTag","movieName","moviePrdYear","MovieActorsTag","actors","actor","peopleNm","cast","MovieCompanysTag","companys","company","companyCd","companyPartNm","companyNm","prdtYear","openDate","substring","nations","genres","directors","MovieDetailContainer","match","id","params","onGetMovie","pMovieId","getMovie","useEffect","pageToTop","window","scrollTo","pageToBottom","document","body","scrollHeight","BookMarkTag","Navbar","activeClassName","exact","React","memo","NavbarContainer","MovieList","onSetItemRowPage","onGetMovieList","onSetMovieList","onPageUp","currentPage","movieNmRef","directorNmRef","itemRowPageRef","itemRowPage","setItemRowPage","onChangeItemRowPage","SelectTag","InputForm","placeholder","addOpenDate","GET_MOVIELIST","GET_MOVIELIST_SUCCESS","GET_MOVIELIST_ERROR","SET_MOVIELIST","PAGE_UP","SET_ITEMROWPAGE","getMovieListAPI","pMovieNm","pDirectorNm","curPage","directorName","pageIndex","itemPerPage","jsonRes","sendData","movieListResult","itemRow","concat","MovieListContainer","setMovieList","item","Company","companyList","onGetCompany","onSetCompany","companyNmRef","ceoNmRef","CompanyTag","GET_COMPANY","GET_COMPANY_SUCCESS","GET_COMPANY_ERROR","SET_COMPANY","getCompanyData","pCompanyNm","pCeoNm","pCurrentPage","ceoNm","companyListResult","companyName","ceoName","CompanyContainer","setCompany","CompanyDetail","FilmosTag","filmos","filmo","parts","GET_COMPANY_DETAIL","GET_COMPANY_DETAIL_SUCCESS","GET_COMPANY_DETAIL_ERROR","getCompanyDetailData","pCompanyCd","companyInfoResult","companyInfo","companyDetail","CompanyDetailContainer","companyid","onGetCompanyDetail","getCompanyDetail","People","people","onGetPeople","onSetPeople","peopleNmRef","filmoNmRef","PeopleTag","PeopleList","peopleCd","GET_PEOPLE","GET_PEOPLE_SUCCESS","GET_PEOPLE_ERROR","SET_PEOPLE","Page_UP","getPeopleData","pPeopleNm","pFilmoNm","filmoNames","peopleListResult","peopleList","peopleName","peopleFilmo","PeopleContainer","setPeople","PeopleDetail","moviePartNm","SET_PEOPLE_ID","getPeopleDetailData","pPeopleId","peopleInfoResult","peopleInfo","peopleDetail","peopleId","PeopleDetailContainer","onSetPeopleId","setPeopleId","onGetPeopleDetail","getPeopleDetail","App","basename","process","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","store","createStore","applyMiddleware","ReduxThunk","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.947defcc.chunk.js","sourcesContent":["import \"./loadingbar.css\";\r\n\r\nexport const LoadingBar = () => {\r\n    return (\r\n        <div className=\"loading_bar\"><i className=\"fas fa-spinner\"></i></div>\r\n    )\r\n}\r\n\r\nexport const LoadingBarViewMore = () => {\r\n    return (\r\n        <div className=\"view_more_loading\">\r\n            <div className=\"view_more_loading_icon\">\r\n                <i className=\"fas fa-spinner\"></i>\r\n            </div>\r\n        </div>\r\n    )\r\n}","export const ContentTag = ({ classNm, propertyName, content, callbackFn = null }) => {\r\n    if (!content[propertyName] || content[propertyName] === \"\") {\r\n        return null;\r\n    }\r\n    const contextText = !callbackFn ? content[propertyName] : callbackFn(content[propertyName]);\r\n    return (\r\n        <>\r\n            <div className={classNm}><h5>{contextText}</h5></div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const ContentsTag = ({ childClassNm, classNm, propertyName, contents, keyName }) => {\r\n    if (!contents) {\r\n        return null;\r\n    }\r\n    return (\r\n        <div className={classNm}>\r\n            {contents.map(content =>\r\n                <div key={`${Math.random()}${content[keyName]}`} className={childClassNm}><h5>{content[propertyName]}</h5></div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useRef, useState } from \"react\";\r\nimport \"./BoxOffice.css\";\r\nimport { Link } from 'react-router-dom';\r\nimport { LoadingBar } from \"../api/loadingbar/loadingbar.js\";\r\nimport { ContentTag } from \"../api/contentTag/contentTag.js\";\r\n\r\n\r\nconst BoxOffice = ({ movieList, getBoxOffice, loading, error, onGetData, onSetSortData }) => {\r\n    const [date, setDate] = useState(\"\");\r\n    const sortButtonGroupRef = useRef();\r\n    const sortBurrontActiveIndex = useRef(null);\r\n\r\n    const onChange = (e) => {\r\n        e.preventDefault();\r\n        setDate(e.target.value);\r\n        onGetData(e.target.value);\r\n    }\r\n\r\n    const sortData = (propertyName, index) => {\r\n        sortBurrontActiveIndex.current = index;\r\n        onSetSortData(propertyName);\r\n    }\r\n\r\n    const onDateSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (!date) return\r\n        getBoxOffice();\r\n        sortBurrontActiveIndex.current = null;\r\n    }\r\n\r\n    const TitleTag = () => {\r\n        return (\r\n            <div className=\"title\">\r\n                <h1>박스오피스</h1>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const SearchTag = () => {\r\n        return (\r\n            <form onSubmit={onDateSubmit}>\r\n                <input type=\"date\"\r\n                    onChange={onChange}\r\n                    value={date}\r\n                />\r\n                <input type=\"submit\" onSubmit={onDateSubmit} value=\"박스오피스 검색\" />\r\n            </form>\r\n        )\r\n    }\r\n\r\n    const SortButtonTag = ({ text, index, setSort, propertyName }) => {\r\n        const isActive = (index === sortBurrontActiveIndex.current);\r\n        return (\r\n            <button onClick={() => setSort(propertyName, index)} className={!isActive ? `sort_button` : `sort_button_active`}>\r\n                {text}\r\n            </button>\r\n        )\r\n    }\r\n\r\n    const SortButtonGroupTag = () => {\r\n        return (\r\n            <div ref={sortButtonGroupRef} className=\"sort_button_list\">\r\n                <SortButtonTag index={0} setSort={sortData} propertyName=\"openDt\" text=\"개봉일\" />\r\n                <SortButtonTag index={1} setSort={sortData} propertyName=\"rank\" text=\"순위\" />\r\n                <SortButtonTag index={2} setSort={sortData} propertyName=\"scrnCnt\" text=\"상영수\" />\r\n                <SortButtonTag index={3} setSort={sortData} propertyName=\"salesAcc\" text=\"누적 매출\" />\r\n                <SortButtonTag index={4} setSort={sortData} propertyName=\"salesAmt\" text=\"매출액\" />\r\n                <SortButtonTag index={5} setSort={sortData} propertyName=\"audiCnt\" text=\"관객수\" />\r\n                <SortButtonTag index={6} setSort={sortData} propertyName=\"audiAcc\" text=\"누적관객수\" />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const HeaderTag = () => {\r\n        return (\r\n            <div className=\"boxoffice_header\">\r\n                <TitleTag />\r\n                <SearchTag />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const addToContour = (pString) => {\r\n        let sendString = \"\";\r\n        let index = 1;\r\n        let currentIndex = pString.length - 1;\r\n        for (let i = pString.length; i > 0; i--) {\r\n            sendString = pString[currentIndex] + sendString;\r\n            if (index % 3 === 0 && currentIndex !== 0) sendString = \",\" + sendString;\r\n            index++;\r\n            currentIndex--;\r\n        }\r\n        return sendString;\r\n    }\r\n\r\n    const MovieTag = ({ movieList }) => {\r\n        return (\r\n            <div className=\"boxoffice_movie\">\r\n                {movieList.map((movie) => {\r\n                    return (\r\n                        <div key={movie.movieCd} className=\"boxoffice_movie_wrap\">\r\n                            <div className=\"boxoffice_movie_rank_wrap\">\r\n                                <ContentTag content={movie} propertyName={\"rank\"} classNm=\"boxoffice_movie_rank\" />\r\n                            </div>\r\n                            <div className=\"boxoffice_movie_inner\">\r\n                                <Link to={`/movie/detail/${movie.movieCd}`} className=\"boxoffice_movie_inner_top\">\r\n                                    <div className=\"boxoffice_movie_poster front\">\r\n                                        <span>\r\n                                            <img alt={`영화 ${movie.movieNm}의 포스터`} />\r\n                                        </span>\r\n                                    </div>\r\n                                    <div className=\"boxoffice_movie_additional back\">\r\n                                        <ContentTag callbackFn={addToContour} content={movie} propertyName=\"showCnt\" classNm=\"boxoffice_movie_show_count\" />\r\n                                        <ContentTag callbackFn={addToContour} content={movie} propertyName=\"audiCnt\" classNm=\"boxoffice_movie_audi_count\" />\r\n                                        <ContentTag callbackFn={addToContour} content={movie} propertyName=\"audiAcc\" classNm=\"boxoffice_movie_audi_accumulate_count\" />\r\n                                        <ContentTag callbackFn={addToContour} content={movie} propertyName=\"salesAcc\" classNm=\"boxoffice_movie_sale_accumulate\" />\r\n                                        <ContentTag callbackFn={addToContour} content={movie} propertyName=\"salesAmt\" classNm=\"boxoffice_movie_sale_today\" />\r\n                                    </div>\r\n                                </Link>\r\n                                <div className=\"boxoffice_movie_inner_bottom\">\r\n                                    <ContentTag content={movie} propertyName=\"movieNm\" classNm=\"boxoffice_movie_name\" />\r\n                                    <ContentTag content={movie} propertyName=\"openDt\" classNm=\"boxoffice_movie_open_date\" />\r\n                                    <ContentTag callbackFn={addToContour} content={movie} propertyName=\"audiCnt\" classNm=\"boxoffice_movie_audience_count\" />\r\n                                    <ContentTag callbackFn={addToContour} content={movie} propertyName=\"audiAcc\" classNm=\"boxoffice_movie_audience_accumulate\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    switch (true) {\r\n        case loading:\r\n            return (\r\n                <LoadingBar />\r\n            )\r\n        case error:\r\n            return (\r\n                <div className=\"text-align-center\">에러</div>\r\n            )\r\n        case !movieList:\r\n            return (\r\n                <HeaderTag />\r\n            )\r\n        case movieList.length === 0:\r\n            return (\r\n                <>\r\n                    <HeaderTag />\r\n                    <div className=\"text-align-center\">정보없음</div>\r\n                </>\r\n            )\r\n        default:\r\n            return (\r\n                <div>\r\n                    <HeaderTag />\r\n                    <SortButtonGroupTag />\r\n                    <div className=\"boxoffice\">\r\n                        <MovieTag movieList={movieList} />\r\n                    </div>\r\n                </div>\r\n            )\r\n    }\r\n\r\n}\r\n\r\nexport default BoxOffice;","export const apiKey = \"?key=7c88cc83cd33def078fa2c0580e6045c\";\r\n\r\nexport const boxOfficeRest = \"https://www.kobis.or.kr/kobisopenapi/webservice/rest/boxoffice/searchDailyBoxOfficeList.json\";\r\nexport const companyListRest = \"https://kobis.or.kr/kobisopenapi/webservice/rest/company/searchCompanyList.json\"\r\nexport const companyDetailRest = \"https://kobis.or.kr/kobisopenapi/webservice/rest/company/searchCompanyInfo.json\"\r\nexport const movieDetailRest = \"https://www.kobis.or.kr/kobisopenapi/webservice/rest/movie/searchMovieInfo.json\"\r\nexport const movieListRest = \"https://kobis.or.kr/kobisopenapi/webservice/rest/movie/searchMovieList.json\"\r\nexport const peopleRest = \"https://kobis.or.kr/kobisopenapi/webservice/rest/people/searchPeopleList.json\"\r\nexport const peopleDetailRest = \"https://kobis.or.kr/kobisopenapi/webservice/rest/people/searchPeopleInfo.json\"","import { boxOfficeRest, apiKey } from \"../api/rest/rest.js\";\r\n\r\nconst GET_BOXOFFICE = \"boxOffice/GET_BOXOFFICE\";\r\nconst GET_BOXOFFICE_SUCCESS = \"boxOffice/GET_BOXOFFICE_SUCCESS\";\r\nconst GET_BOXOFFICE_ERROR = \"boxOffice/GET_BOXOFFICE_ERROR\";\r\nconst GET_DATE = \"boxOffice/GET_DATE\";\r\nconst SET_SORT_DATE = \"boxOffice/SET_SORT_DATE\";\r\n\r\nexport const getBoxOffice = () => async (dispatch, getState) => {\r\n    dispatch({ type: GET_BOXOFFICE });\r\n    try {\r\n        const { date } = getState().boxOffice;\r\n        const targetDate = `&targetDt=${date}`\r\n        const res = await fetch(`${boxOfficeRest}${apiKey}${targetDate}`);\r\n        const resJson = await res.json();\r\n        const data = resJson.boxOfficeResult.dailyBoxOfficeList;\r\n        dispatch({ type: GET_BOXOFFICE_SUCCESS, data });\r\n    } catch (e) {\r\n        dispatch({ type: GET_BOXOFFICE_ERROR, error: e });\r\n    }\r\n}\r\n\r\nexport const getData = (date) => {\r\n    return { type: GET_DATE, date };\r\n}\r\n\r\nexport const setSortData = (dataToSort) => {\r\n    return { type: SET_SORT_DATE, dataToSort }\r\n}\r\n\r\nconst initialState = {\r\n    boxOffice: {\r\n        data: null,\r\n        loading: false,\r\n        error: null,\r\n    },\r\n    date: null,\r\n}\r\n\r\nconst boxOffice = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_SORT_DATE: {\r\n            const { dataToSort } = action;\r\n            const dataClone = state.boxOffice.data.slice();\r\n            const sortedData = dataClone.sort((a, b) => {\r\n                return parseInt(a[dataToSort].replace(/[^0-9]/g, '')) - parseInt(b[dataToSort].replace(/[^0-9]/g, ''));\r\n            })\r\n            return {\r\n                ...state,\r\n                boxOffice: { ...state.boxOffice, data: sortedData }\r\n            }\r\n        }\r\n        case GET_BOXOFFICE:\r\n            return {\r\n                ...state,\r\n                boxOffice: { ...state.boxOffice, loading: true }\r\n            };\r\n        case GET_BOXOFFICE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                boxOffice: { ...state.boxOffice, data: action.data, loading: false },\r\n            };\r\n        case GET_BOXOFFICE_ERROR:\r\n            return {\r\n                ...state,\r\n                boxOffice: { ...state.boxOffice, error: action.error, loading: false },\r\n            };\r\n        case GET_DATE:\r\n            return {\r\n                ...state,\r\n                date: action.date,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default boxOffice;","import { useDispatch, useSelector } from \"react-redux\"\r\nimport BoxOffice from \"../components/BoxOffice\";\r\nimport { getBoxOffice, getData, setSortData } from \"../modules/boxOffice.js\";\r\n\r\nconst BoxOfficeContainer = () => {\r\n    const { movieList, loading, error } = useSelector(state => ({\r\n        movieList: state.boxOffice.boxOffice.data,\r\n        loading: state.boxOffice.boxOffice.loading,\r\n        error: state.boxOffice.boxOffice.error,\r\n    }));\r\n    const dispatch = useDispatch();\r\n\r\n    const onGetBoxOffice = () => {\r\n        dispatch(getBoxOffice());\r\n    }\r\n\r\n    const onSetSortData = (dataToSort) => {\r\n        dispatch(setSortData(dataToSort))\r\n    }\r\n\r\n    const onGetData = (date) => {\r\n        const filterdDate = date.split('-');\r\n        const year = filterdDate[0];\r\n        const month = filterdDate[1];\r\n        const day = filterdDate[2];\r\n        const sendDate = `${year}${month}${day}`\r\n        dispatch(getData(sendDate));\r\n    }\r\n    return (\r\n        <BoxOffice\r\n            loading={loading}\r\n            error={error}\r\n            movieList={movieList}\r\n            getBoxOffice={onGetBoxOffice}\r\n            onGetData={onGetData}\r\n            onSetSortData={onSetSortData}\r\n        />\r\n    )\r\n}\r\n\r\nexport default BoxOfficeContainer;","import { movieDetailRest, apiKey } from \"../api/rest/rest.js\";\r\n\r\nconst GET_MOVIE_DETAIL_ID = \"movieDetail/GET_MOVIE_DETAIL_ID\";\r\nconst GET_MOVIE_DETAIL = \"movieDetail/GET_MOVIE_DETAIL\";\r\nconst GET_MOVIE_DETAIL_SUCCESS = \"movieDetail/GET_MOVIE_DETAIL_SUCCESS\";\r\nconst GET_MOVIE_DETAIL_ERROR = \"movieDetail/GET_MOVIE_DETAIL_ERROR\";\r\n\r\nexport const setMovieCd = (movieId) => {\r\n    return { type: GET_MOVIE_DETAIL_ID, movieId };\r\n}\r\n\r\nexport const getMovie = (movieId) => async (dispatch) => {\r\n    dispatch({ type: GET_MOVIE_DETAIL });\r\n    try {\r\n        const movieCd = `&movieCd=${movieId}`\r\n        const res = await fetch(`${movieDetailRest}${apiKey}${movieCd}`)\r\n        const resJson = await res.json();\r\n        const movieSend = resJson;\r\n        dispatch({ type: GET_MOVIE_DETAIL_SUCCESS, movie: movieSend });\r\n    } catch (e) {\r\n        dispatch({ type: GET_MOVIE_DETAIL_ERROR, error: e });\r\n    }\r\n}\r\n\r\nconst initialState = {\r\n    movie: {\r\n        loading: false,\r\n        data: null,\r\n        error: null,\r\n    },\r\n    movieId: null,\r\n}\r\n\r\nconst movieDetail = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_MOVIE_DETAIL_ID:\r\n            return {\r\n                ...state,\r\n                movieId: action.movieId,\r\n            };\r\n        case GET_MOVIE_DETAIL:\r\n            return {\r\n                ...state,\r\n                movie: { ...state.movie, loading: true },\r\n            };\r\n        case GET_MOVIE_DETAIL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                movie: { ...state.movie, loading: false, data: action.movie },\r\n            };\r\n        case GET_MOVIE_DETAIL_ERROR:\r\n            return {\r\n                ...state,\r\n                movie: { ...state.movie, loading: false, error: action.error },\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default movieDetail;","import { useEffect, useRef, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./MovieDetail.css\";\r\nimport { LoadingBar } from \"../api/loadingbar/loadingbar.js\";\r\nimport { ContentTag, ContentsTag } from \"../api/contentTag/contentTag.js\";\r\n\r\n\r\nconst MovieDetail = ({ movie, error, loading }) => {\r\n\r\n    const { movieInfo } = movie.movieInfoResult;\r\n\r\n    const MovieTitleTag = ({ movieName, moviePrdYear }) => {\r\n        return (\r\n            <div className=\"movie_title\">\r\n                <div className=\"movie_name\">\r\n                    <h1>{movieName}</h1>\r\n                </div>\r\n                <div className=\"movie_prdt_year\">\r\n                    <h3>({moviePrdYear})</h3>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const MovieActorsTag = ({ actors }) => {\r\n        return (\r\n            <div className=\"movie_actors\">\r\n                {actors.map((actor, index) => {\r\n                    return (\r\n                        <div key={index} className=\"movie_actor\">\r\n                            <div className=\"movie_actor_profile\">\r\n                                <span><img alt={`${actor.peopleNm}의 사진`}></img></span>\r\n                            </div>\r\n                            <div className=\"movie_actor_name\"><h5>{actor.peopleNm}</h5></div>\r\n                            {\r\n                                actor.cast !== \"\" &&\r\n                                <div className=\"movie_actor_cast\"><h5>{actor.cast} 역</h5></div>\r\n                            }\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const movieOpenDate = (openDate) => {\r\n        const year = openDate.substring(0, 4);\r\n        const month = openDate.substring(4, 6);\r\n        const day = openDate.substring(6, 8);\r\n        return `${year}년 ${month}월 ${day}일`\r\n    }\r\n\r\n    const MovieCompanysTag = ({ companys }) => {\r\n        return (\r\n            <div className=\"companys\">\r\n                {companys.map((company) => {\r\n                    return (\r\n                        <div key={Math.random()}>\r\n                            <Link to={`/company/detail/${company.companyCd}`}>\r\n                                <div className=\"company\">\r\n                                    <h5>\r\n                                        {company.companyPartNm} - {company.companyNm}\r\n                                    </h5>\r\n                                </div>\r\n                            </Link>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    switch (true) {\r\n        case loading:\r\n            return (\r\n                <LoadingBar />\r\n            )\r\n        case !movie:\r\n            return (\r\n                <div className=\"text-align-center\">정보없음</div>\r\n            )\r\n        case error:\r\n            return (\r\n                <div className=\"text-align-center\">에러</div>\r\n            )\r\n        default:\r\n            return (\r\n                <div className=\"movie\">\r\n                    <MovieTitleTag movieName={movieInfo.movieNm} moviePrdYear={movieInfo.prdtYear} />\r\n                    <div className=\"movie_box\">\r\n                        <div className=\"movie_box_inner\">\r\n                            <div className=\"movie_box_inner_top\">\r\n                                <div className=\"movie_box_inner_top--left\">\r\n                                    <div className=\"movie_poster\">\r\n                                        <span>\r\n                                            <img alt={`영화 ${movieInfo.movieNm}의 포스터`}></img>\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"movie_box_inner_top--right\">\r\n                                    <ContentTag content={movieInfo} classNm=\"movie_show_time\" propertyName=\"showTm\" />\r\n                                    <ContentTag content={movieInfo} callbackFn={movieOpenDate} classNm=\"movie_open_date\" propertyName=\"openDt\" />\r\n                                    <ContentsTag contents={movieInfo.nations} childClassNm=\"movie_nation\" classNm=\"movie_nations\" propertyName=\"nationNm\" />\r\n                                    <ContentsTag contents={movieInfo.genres} childClassNm=\"movie_genre\" classNm=\"movie_genres\" propertyName=\"genreNm\" />\r\n                                    <ContentsTag contents={movieInfo.directors} childClassNm=\"movie_director\" classNm=\"movie_directors\" propertyName=\"peopleNm\" />\r\n                                    <MovieCompanysTag companys={movieInfo.companys} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"movie_box_inner_bottom\">\r\n                                <div className=\"actors_title\"><h3>참여 배우</h3></div>\r\n                                <MovieActorsTag actors={movieInfo.actors} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n    }\r\n}\r\n\r\nexport default MovieDetail;","import { useDispatch, useSelector } from \"react-redux\"\r\nimport { getMovie, setMovieCd } from \"../modules/movieDetail.js\";\r\nimport MovieDetail from \"../components/MovieDetail.js\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst MovieDetailContainer = ({ match }) => {\r\n    const { movie, movieId, error, loading } = useSelector(state => ({\r\n        movie: state.movieDetail.movie.data,\r\n        loading: state.movieDetail.movie.loading,\r\n        error: state.movieDetail.movie.error,\r\n        movieId: state.movieDetail.movieId,\r\n    }));\r\n\r\n    const { id } = match.params;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const onGetMovie = (pMovieId) => {\r\n        dispatch(getMovie(pMovieId));\r\n    };\r\n\r\n    const onSetMovieId = (id) => {\r\n        setMovieCd(id);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (movieId === id) return\r\n        onSetMovieId(id);\r\n        onGetMovie(id);\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <MovieDetail\r\n                movie={movie}\r\n                error={error}\r\n                loading={loading}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieDetailContainer;","import \"./BookmarkTag.css\"\r\n\r\nconst pageToTop = () => {\r\n    window.scrollTo(0, 0);\r\n}\r\n\r\nconst pageToBottom = () => {\r\n    window.scrollTo(0, document.body.scrollHeight)\r\n}\r\n\r\nconst BookMarkTag = () => {\r\n    return (\r\n        <div className=\"bookmark\">\r\n            <button onClick={pageToTop} className=\"top_bookmark\"><i className=\"fas fa-arrow-up\"></i></button>\r\n            <button onClick={pageToBottom} className=\"bottom_bookmark\"><i className=\"fas fa-arrow-down\"></i></button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BookMarkTag;","import \"./Navbar.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport BookmarkTag from \"../api/bookmarkTag/BookmarkTag.js\"\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <>\r\n            <header className=\"header_navbar\">\r\n                <nav className=\"navbar_table\">\r\n                    <NavLink\r\n                        className=\"navbar_cell\"\r\n                        activeClassName=\"active\"\r\n                        exact\r\n                        to=\"/\"\r\n                    >\r\n                        박스오피스 검색\r\n            </NavLink>\r\n                    <NavLink\r\n                        className=\"navbar_cell\"\r\n                        activeClassName=\"active\"\r\n                        to=\"/movielist\"\r\n                        exact\r\n                    >\r\n                        영화검색\r\n            </NavLink>\r\n                    <NavLink\r\n                        className=\"navbar_cell\"\r\n                        activeClassName=\"active\"\r\n                        to=\"/companys\"\r\n                        exact\r\n                    >\r\n                        영화사 검색\r\n            </NavLink>\r\n                    <NavLink\r\n                        className=\"navbar_cell\"\r\n                        activeClassName=\"active\"\r\n                        to=\"/peoplelist\"\r\n                        exact\r\n                    >\r\n                        영화인 검색\r\n                </NavLink>\r\n                </nav>\r\n            </header>\r\n            <BookmarkTag />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default React.memo(Navbar);","import Navbar from \"../components/Navbar.js\"\r\n\r\nconst NavbarContainer = () => {\r\n    return (\r\n        <Navbar />\r\n    )\r\n}\r\n\r\nexport default NavbarContainer;","import \"./MovieList.css\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { LoadingBar, LoadingBarViewMore } from \"../api/loadingbar/loadingbar.js\";\r\nimport { ContentTag } from \"../api/contentTag/contentTag.js\";\r\n\r\n\r\nconst MovieList = ({ error, onSetItemRowPage, onGetMovieList, movieList, loading, onSetMovieList, onPageUp, currentPage }) => {\r\n    const movieNmRef = useRef();\r\n    const directorNmRef = useRef();\r\n    const itemRowPageRef = useRef(10);\r\n\r\n    const [itemRowPage, setItemRowPage] = useState(10);\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (movieNmRef.current.value === \"\" && directorNmRef.current.value === \"\") return\r\n        onSetMovieList(movieNmRef.current.value, directorNmRef.current.value)\r\n        onSetItemRowPage(itemRowPage);\r\n        itemRowPageRef.current = itemRowPage;\r\n        onGetMovieList();\r\n    }\r\n\r\n    const onChangeItemRowPage = (e) => {\r\n        setItemRowPage(e.target.value);\r\n    }\r\n\r\n    const TitleTag = () => {\r\n        return (\r\n            <div className=\"container title text-align-center\">\r\n                <h1>\r\n                    영화검색\r\n                </h1>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const SelectTag = () => {\r\n        return (\r\n            <div className=\"container text-align-center\">\r\n                <div>\r\n                    <label>검색 결과 개수</label>\r\n                    <select value={itemRowPage} onChange={onChangeItemRowPage} id=\"select-itemPerPage\">\r\n                        <option value=\"1\">1</option>\r\n                        <option value=\"5\">5</option>\r\n                        <option value=\"10\">10</option>\r\n                        <option value=\"20\">20</option>\r\n                        <option value=\"50\">50</option>\r\n                        <option value=\"100\">100</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const InputForm = () => {\r\n        return (\r\n            <div className=\"container input text-align-center\">\r\n                <form className=\"movielist_form\" onSubmit={onSubmit} type=\"submit\">\r\n                    <fieldset className=\"movielist_fieldset\">\r\n                        <input className=\"input_title\" ref={movieNmRef} placeholder=\"제목\" type=\"text\" />\r\n                        <input className=\"input_director\" ref={directorNmRef} placeholder=\"감독\" type=\"text\" />\r\n                        <input className=\"input_submit\" type=\"submit\" />\r\n                    </fieldset>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const addOpenDate = (pString) => {\r\n        const year = `${pString[0]}${pString[1]}${pString[2]}${pString[3]}년`;\r\n        const month = `${pString[4]}${pString[5]}월`;\r\n        const day = `${pString[6]}${pString[7]}일`;\r\n        return `${year} ${month} ${day}`;\r\n    }\r\n\r\n    const movieGetMore = () => {\r\n        if (currentPage * itemRowPageRef.current !== movieList.length) return\r\n        onPageUp();\r\n        onGetMovieList();\r\n    }\r\n\r\n    const MovieTag = ({ movieList }) => {\r\n        return (\r\n            <div className=\"movielist_movie\">\r\n                {movieList.map((movie) => {\r\n                    return (\r\n                        <div key={movie.movieCd} className=\"movielist_movie_wrap\">\r\n                            <div className=\"movielist_movie_inner\">\r\n                                <Link to={`/movie/detail/${movie.movieCd}`} className=\"movielist_movie_inner_top\">\r\n                                    <div className=\"movielist_movie_poster front\">\r\n                                        <span>\r\n                                            <img alt={`영화 ${movie.movieNm}의 포스터`} />\r\n                                        </span>\r\n                                    </div>\r\n                                </Link>\r\n                                <div className=\"movielist_movie_inner_bottom\">\r\n                                    <ContentTag content={movie} propertyName=\"movieNm\" classNm=\"movielist_movie_name_ko\" />\r\n                                    <ContentTag content={movie} propertyName=\"movieNmEn\" classNm=\" movielist_movie_name_en\" />\r\n                                    <ContentTag content={movie} callbackFn={addOpenDate} propertyName=\"openDt\" classNm=\"movielist_movie_open_dt\" />\r\n                                    <ContentTag content={movie} propertyName=\"prdtYear\" classNm=\"movielist_movie_prdt_year\" />\r\n                                    <ContentTag content={movie} propertyName=\"prdtStatNm\" classNm=\"movielist_movie_prdt_stat_nm\" />\r\n                                    <ContentTag content={movie} propertyName=\"repNationNm\" classNm=\"movielist_movie_rep_nation_mm\" />\r\n                                    <ContentTag content={movie} propertyName=\"repGenreNm\" classNm=\"movielist_movie_rep_genre_nm\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    switch (true) {\r\n        case loading && !movieList:\r\n            return (\r\n                <>\r\n                    <TitleTag />\r\n                    <InputForm />\r\n                    <SelectTag />\r\n                    <LoadingBar />\r\n                </>\r\n            )\r\n        case loading:\r\n            return (\r\n                <div>\r\n                    <TitleTag />\r\n                    <InputForm />\r\n                    <SelectTag />\r\n                    <div className=\"movielist\">\r\n                        <div className=\"container\">\r\n                            <MovieTag movieList={movieList} />\r\n                            <LoadingBarViewMore />\r\n                        </div>\r\n                    </div>\r\n                </div >\r\n            )\r\n        case !movieList:\r\n            return (\r\n                <>\r\n                    <TitleTag />\r\n                    <InputForm />\r\n                    <SelectTag />\r\n                </>\r\n            )\r\n        case error:\r\n            return (\r\n                <>\r\n                    <TitleTag />\r\n                    <InputForm />\r\n                    <SelectTag />\r\n                    <div className=\"text-align-center\">에러</div>\r\n                </>\r\n            )\r\n        case movieList.length === 0:\r\n            return (\r\n                <>\r\n                    <TitleTag />\r\n                    <InputForm />\r\n                    <SelectTag />\r\n                    <div className=\"text-align-center\">정보없음</div>\r\n                </>\r\n            )\r\n        default:\r\n            return (\r\n                <div>\r\n                    <TitleTag />\r\n                    <InputForm />\r\n                    <SelectTag />\r\n                    <div className=\"movielist\">\r\n                        <div className=\"container\">\r\n                            <MovieTag movieList={movieList} />\r\n                            {\r\n                                currentPage * itemRowPageRef.current === movieList.length &&\r\n                                <div className=\"view_more_button\">\r\n                                    <button onClick={movieGetMore}><i className=\"fas fa-chevron-circle-down\"></i></button>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div >\r\n            )\r\n    }\r\n}\r\n\r\nexport default MovieList;","import { movieListRest, apiKey } from \"../api/rest/rest.js\";\r\n\r\nconst GET_MOVIELIST = \"movieList/GET_MOVIELIST\";\r\nconst GET_MOVIELIST_SUCCESS = \"movieList/GET_MOVIELIST_SUCCESS\";\r\nconst GET_MOVIELIST_ERROR = \"movieList/GET_MOVIELIST_SUCCESS\";\r\nconst SET_MOVIELIST = \"movieList/SET_MOVIELIST\";\r\nconst PAGE_UP = \"movieList/PAGE_UP\";\r\nconst SET_ITEMROWPAGE = \"movieList/SET_ITEMROWPAGE\";\r\n\r\nexport const setItemRowPage = (itemRow) => {\r\n    return { type: SET_ITEMROWPAGE, itemRow };\r\n}\r\n\r\nconst getMovieListAPI = async (pMovieNm, pDirectorNm, curPage, itemRowPage) => {\r\n    const movieName = pMovieNm !== \"\" ? `&movieNm=${pMovieNm}` : \"\";\r\n    const directorName = pDirectorNm !== \"\" ? `&directorNm=${pDirectorNm}` : \"\";\r\n    const pageIndex = `&curPage=${curPage}`\r\n    const itemPerPage = `&itemPerPage=${itemRowPage}`\r\n    const res = await fetch(`${movieListRest}${apiKey}${movieName}${directorName}${pageIndex}${itemPerPage}`);\r\n    const jsonRes = await res.json();\r\n    const sendData = jsonRes.movieListResult.movieList;\r\n    return sendData;\r\n}\r\n\r\nexport const setMovieList = (movieName = \"\", directorName = \"\") => {\r\n    return { type: SET_MOVIELIST, directorName, movieName };\r\n}\r\n\r\nexport const getMovieList = () => async (dispatch, getState) => {\r\n    dispatch({ type: GET_MOVIELIST });\r\n    try {\r\n        const { movieName } = getState().movieList;\r\n        const { directorName } = getState().movieList;\r\n        const { currentPage } = getState().movieList;\r\n        const { itemRowPage } = getState().movieList;\r\n        const data = await getMovieListAPI(movieName, directorName, currentPage, itemRowPage);\r\n        dispatch({ type: GET_MOVIELIST_SUCCESS, data });\r\n    } catch (e) {\r\n        dispatch({ type: GET_MOVIELIST_ERROR, error: e });\r\n    }\r\n}\r\n\r\nexport const pageUp = () => {\r\n    return ({ type: PAGE_UP });\r\n}\r\n\r\nconst initialState = {\r\n    movieList: {\r\n        data: null,\r\n        loading: false,\r\n        error: null,\r\n    },\r\n    movieName: \"\",\r\n    directorName: \"\",\r\n    currentPage: 1,\r\n    itemRowPage: 10,\r\n}\r\n\r\nconst MovieList = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_ITEMROWPAGE: {\r\n            return {\r\n                ...state,\r\n                itemRowPage: action.itemRow,\r\n                currentPage: 1,\r\n            }\r\n        }\r\n        case PAGE_UP: {\r\n            return {\r\n                ...state,\r\n                currentPage: state.currentPage + 1,\r\n            }\r\n        }\r\n        case SET_MOVIELIST: {\r\n            return {\r\n                ...state,\r\n                movieList: { data: null, loading: false, error: null },\r\n                movieName: action.movieName,\r\n                directorName: action.directorName,\r\n                currentPage: 1,\r\n            };\r\n        }\r\n        case GET_MOVIELIST: {\r\n            return {\r\n                ...state,\r\n                movieList: { ...state.movieList, loading: true },\r\n            };\r\n        }\r\n        case GET_MOVIELIST_SUCCESS: {\r\n            const sendData = !state.movieList.data ? action.data : state.movieList.data.concat(action.data);\r\n            return {\r\n                ...state,\r\n                movieList: { ...state.movieList, loading: false, data: sendData }\r\n            };\r\n        }\r\n        case GET_MOVIELIST_ERROR: {\r\n            return {\r\n                ...state,\r\n                movieList: { ...state.movieList, loading: false, error: action.error },\r\n            };\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default MovieList;","import { useDispatch, useSelector } from \"react-redux\"\r\nimport MovieList from \"../components/MovieList.js\";\r\nimport { getMovieList, setMovieList, pageUp, setItemRowPage } from \"../modules/movieList.js\";\r\n\r\nconst MovieListContainer = () => {\r\n    const { movieList, loading, error, currentPage } = useSelector(state => ({\r\n        movieList: state.movieList.movieList.data,\r\n        loading: state.movieList.movieList.loading,\r\n        error: state.movieList.movieList.error,\r\n        currentPage: state.movieList.currentPage,\r\n    }));\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const onGetMovieList = () => {\r\n        dispatch(getMovieList())\r\n    }\r\n\r\n    const onSetItemRowPage = (item) => {\r\n        dispatch(setItemRowPage(item));\r\n    }\r\n\r\n    const onPageUp = () => {\r\n        dispatch(pageUp());\r\n    }\r\n\r\n    const onSetMovieList = (movieName, directorName) => {\r\n        dispatch(setMovieList(movieName, directorName))\r\n    }\r\n\r\n    return (\r\n        <MovieList\r\n            onGetMovieList={onGetMovieList}\r\n            movieList={movieList}\r\n            loading={loading}\r\n            error={error}\r\n            onSetMovieList={onSetMovieList}\r\n            onPageUp={onPageUp}\r\n            currentPage={currentPage}\r\n            onSetItemRowPage={onSetItemRowPage}\r\n        />\r\n    )\r\n\r\n}\r\n\r\nexport default MovieListContainer;","import { useRef } from \"react\"\r\nimport \"./Company.css\";\r\nimport { useState } from \"react\"\r\nimport { Link } from \"react-router-dom\";\r\nimport { LoadingBar, LoadingBarViewMore } from \"../api/loadingbar/loadingbar.js\";\r\nimport { ContentTag } from \"../api/contentTag/contentTag.js\";\r\n\r\n\r\nconst Company = ({ onSetItemRowPage, companyList, onGetCompany, error, loading, currentPage, onPageUp, onSetCompany }) => {\r\n    const companyNmRef = useRef();\r\n    const ceoNmRef = useRef();\r\n    const itemRowPageRef = useRef(10);\r\n\r\n    const [itemRowPage, setItemRowPage] = useState(10);\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (companyNmRef.current.value === \"\" && ceoNmRef.current.value === \"\") return\r\n        onSetCompany(companyNmRef.current.value, ceoNmRef.current.value);\r\n        onSetItemRowPage(itemRowPage);\r\n        itemRowPageRef.current = itemRowPage;\r\n        onGetCompany();\r\n    }\r\n\r\n    const onChangeItemRowPage = (e) => {\r\n        setItemRowPage(e.target.value);\r\n    }\r\n\r\n    const SelectTag = () => {\r\n        return (\r\n            <div className=\"container text-align-center\">\r\n                <div>\r\n                    <label>검색 결과 개수</label>\r\n                    <select value={itemRowPage} onChange={onChangeItemRowPage} id=\"select-itemPerPage\">\r\n                        <option value=\"1\">1</option>\r\n                        <option value=\"5\">5</option>\r\n                        <option value=\"10\">10</option>\r\n                        <option value=\"20\">20</option>\r\n                        <option value=\"50\">50</option>\r\n                        <option value=\"100\">100</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    const TitleTag = () => {\r\n        return (\r\n            <div className=\"title text-align-center\">\r\n                <h1>\r\n                    영화사\r\n                 </h1>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const InputForm = () => {\r\n        return (\r\n            <div className=\"container text-align-center input \">\r\n                <form className=\"company_form\" onSubmit={onSubmit}>\r\n                    <fieldset className=\"company_fieldset\">\r\n                        <input className=\"input_name\" ref={companyNmRef} type=\"text\" placeholder=\"영화사명\" />\r\n                        <input className=\"input_ceo\" ref={ceoNmRef} type=\"text\" placeholder=\"대표자명\" />\r\n                        <input className=\"input_submit\" type=\"submit\" onSubmit={onSubmit} />\r\n                    </fieldset>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const companyGetMore = () => {\r\n        onPageUp();\r\n        onGetCompany();\r\n    }\r\n\r\n    const CompanyTag = ({ companyList, keyName }) => {\r\n        return (\r\n            <div className=\"companylist_company\">\r\n                {companyList.map((company) => {\r\n                    return (\r\n                        <div key={company[keyName]} className=\"company_wrap\">\r\n                            <div className=\"company_inner\">\r\n                                <Link to={`/company/detail/${company.companyCd}`} className=\"company_inner_top\">\r\n                                    <div className=\"company_poster\">\r\n                                        <span>\r\n                                            <img alt={`회사 ${company.companyNm}의 로고`} />\r\n                                        </span>\r\n                                    </div>\r\n                                </Link>\r\n                                <div className=\"company_inner_bottom\">\r\n                                    <ContentTag content={company} propertyName=\"companyNm\" classNm=\"company_name_ko\" />\r\n                                    <ContentTag content={company} propertyName=\"companyNmEn\" classNm=\"company_name_en\" />\r\n                                    <ContentTag content={company} propertyName=\"companyPartNames\" classNm=\"company_open_dt\" />\r\n                                    <ContentTag content={company} propertyName=\"ceoNm\" classNm=\"company_ceo_name\" />                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    switch (true) {\r\n        case loading && !companyList:\r\n            return (\r\n                <>\r\n                    <TitleTag />\r\n                    <InputForm />\r\n                    <SelectTag />\r\n                    <LoadingBar />\r\n                </>\r\n            )\r\n        case loading && companyList:\r\n            return (\r\n                <>\r\n                    <TitleTag />\r\n                    <InputForm />\r\n                    <SelectTag />\r\n                    <div className=\"companylist\">\r\n                        <div className=\"companyList_wrap\">\r\n                            <CompanyTag keyName=\"companyCd\" companyList={companyList} />\r\n                            <LoadingBarViewMore />\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            )\r\n        case !companyList:\r\n            return (\r\n                <>\r\n                    <TitleTag />\r\n                    <InputForm />\r\n                    <SelectTag />\r\n                </>\r\n            )\r\n        case companyList.length === 0:\r\n            return (\r\n                <>\r\n                    <TitleTag />\r\n                    <InputForm />\r\n                    <SelectTag />\r\n                    <div className=\"text-align-center\">정보 없음</div>\r\n                </>\r\n            )\r\n        case error:\r\n            return (\r\n                <>\r\n                    <TitleTag />\r\n                    <InputForm />\r\n                    <SelectTag />\r\n                    <div className=\"text-align-center\">에러</div>\r\n                </>\r\n            )\r\n        default:\r\n            return (\r\n                <>\r\n                    <TitleTag />\r\n                    <InputForm />\r\n                    <SelectTag />\r\n                    <div className=\"companylist\">\r\n                        <div className=\"companyList_wrap\">\r\n                            <CompanyTag keyName=\"companyCd\" companyList={companyList} />\r\n                            {\r\n                                currentPage * itemRowPageRef.current === companyList.length &&\r\n                                <div className=\"view_more_button\">\r\n                                    <button onClick={companyGetMore}><i className=\"fas fa-chevron-circle-down\"></i></button>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            )\r\n    }\r\n}\r\n\r\nexport default Company;","import { companyListRest, apiKey } from \"../api/rest/rest.js\";\r\n\r\n\r\nconst GET_COMPANY = \"company/GET_COMPANY\";\r\nconst GET_COMPANY_SUCCESS = \"company/GET_COMPANY_SUCCESS\";\r\nconst GET_COMPANY_ERROR = \"company/GET_COMPANY_ERROR\";\r\nconst SET_COMPANY = \"company/SET_COMPANY\";\r\nconst PAGE_UP = \"company/PAGE_UP\";\r\nconst SET_ITEMROWPAGE = \"company/SET_ITEMROWPAGE\";\r\n\r\n\r\nexport const setItemRowPage = (itemRow) => {\r\n    return { type: SET_ITEMROWPAGE, itemRow };\r\n}\r\n\r\nexport const getCompany = () => async (dispatch, getState) => {\r\n    dispatch({ type: GET_COMPANY });\r\n    try {\r\n        const { companyName } = getState().company;\r\n        const { ceoName } = getState().company;\r\n        const { currentPage } = getState().company;\r\n        const { itemRowPage } = getState().company;\r\n        const data = await getCompanyData(companyName, ceoName, currentPage, itemRowPage);\r\n        dispatch({ type: GET_COMPANY_SUCCESS, data })\r\n    } catch (e) {\r\n        dispatch({ type: GET_COMPANY_ERROR });\r\n    }\r\n}\r\n\r\nexport const setCompany = (companyName, ceoName) => {\r\n    return { type: SET_COMPANY, companyName, ceoName };\r\n}\r\n\r\nexport const pageUp = () => {\r\n    return { type: PAGE_UP };\r\n}\r\n\r\nconst getCompanyData = async (pCompanyNm, pCeoNm, pCurrentPage, itemRowPage) => {\r\n    const companyNm = pCompanyNm !== \"\" ? `&companyNm=${pCompanyNm}` : \"\";\r\n    const ceoNm = pCeoNm !== \"\" ? `&ceoNm=${pCeoNm}` : \"\";\r\n    const currentPage = `&curPage=${pCurrentPage}`\r\n    const itemPerPage = `&itemPerPage=${itemRowPage}`\r\n    const res = await fetch(`${companyListRest}${apiKey}${companyNm}${ceoNm}${currentPage}${itemPerPage}`)\r\n    const jsonRes = await res.json();\r\n    const sendData = jsonRes.companyListResult.companyList;\r\n    return sendData;\r\n}\r\n\r\nconst initialState = {\r\n    company: {\r\n        loading: false,\r\n        data: null,\r\n        error: null,\r\n    },\r\n    companyName: \"\",\r\n    ceoName: \"\",\r\n    currentPage: 1,\r\n    itemRowPage: 10,\r\n}\r\n\r\nconst company = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_ITEMROWPAGE: {\r\n            return {\r\n                ...state,\r\n                itemRowPage: action.itemRow,\r\n                currentPage: 1,\r\n            }\r\n        }\r\n        case PAGE_UP: {\r\n            return {\r\n                ...state,\r\n                currentPage: state.currentPage + 1,\r\n            }\r\n        }\r\n        case SET_COMPANY: {\r\n            return {\r\n                ...state,\r\n                company: { loading: false, data: null, error: null },\r\n                companyName: action.companyName,\r\n                ceoName: action.ceoName,\r\n                currentPage: 1,\r\n            }\r\n        }\r\n        case GET_COMPANY: {\r\n            return {\r\n                ...state,\r\n                company: { ...state.company, loading: true }\r\n            };\r\n        }\r\n        case GET_COMPANY_SUCCESS: {\r\n            const sendData = !state.company.data ? action.data : [...state.company.data, ...action.data];\r\n            return {\r\n                ...state,\r\n                company: { ...state.company, data: sendData, loading: false }\r\n            };\r\n        }\r\n        case GET_COMPANY_ERROR: {\r\n            return {\r\n                ...state,\r\n                company: { ...state.company, error: action.error, loading: false }\r\n            };\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default company;","import Company from \"../components/Company.js\";\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { getCompany, setCompany, pageUp,setItemRowPage } from \"../modules/company.js\";\r\n\r\nconst CompanyContainer = () => {\r\n    const { companyList, loading, error, currentPage } = useSelector(state => ({\r\n        companyList: state.company.company.data,\r\n        loading: state.company.company.loading,\r\n        error: state.company.company.error,\r\n        currentPage: state.company.currentPage,\r\n    }));\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const onSetItemRowPage = (itemRow) => {\r\n        dispatch(setItemRowPage(itemRow))\r\n    }\r\n\r\n    const onGetCompany = () => {\r\n        dispatch(getCompany());\r\n    }\r\n\r\n    const onSetCompany = (companyName, ceoName) => {\r\n        dispatch(setCompany(companyName, ceoName));\r\n    }\r\n\r\n    const onPageUp = () => {\r\n        dispatch(pageUp());\r\n    }\r\n\r\n    return <Company\r\n        loading={loading}\r\n        error={error}\r\n        onGetCompany={onGetCompany}\r\n        companyList={companyList}\r\n        onPageUp={onPageUp}\r\n        onSetCompany={onSetCompany}\r\n        currentPage={currentPage}\r\n        onSetItemRowPage={onSetItemRowPage}\r\n    />\r\n}\r\n\r\nexport default CompanyContainer;","import { Link } from \"react-router-dom\";\r\nimport \"./CompanyDetail.css\";\r\nimport { LoadingBar } from \"../api/loadingbar/loadingbar.js\";\r\nimport { ContentTag, ContentsTag } from \"../api/contentTag/contentTag.js\";\r\n\r\n\r\nconst CompanyDetail = ({ error, company, loading }) => {\r\n\r\n    const FilmosTag = ({ filmos }) => {\r\n        return (\r\n            <div className=\"company_detail_filmos\">\r\n                {filmos.map((filmo) => {\r\n                    return (\r\n                        <div key={`${filmo.movieCd}`} className=\"company_detail_filmo\">\r\n                            <Link\r\n                                className=\"movie_link\"\r\n                                to={`/movie/detail/${filmo.movieCd}`}\r\n                            >\r\n                                <div className=\"company_detail_filmo_poster\">\r\n                                    <span>\r\n                                        <img alt={`영화 ${filmo.movieNm}의 포스터`} />\r\n                                    </span>\r\n                                </div>\r\n                            </Link>\r\n                            <div className=\"company_detail_filmo_name\"><h5>{filmo.movieNm}</h5></div>\r\n                            <div className=\"company_detail_filmo_cast\"><h5>{filmo.companyPartNm}</h5></div>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    switch (true) {\r\n        case loading:\r\n            return (\r\n                <LoadingBar />\r\n            )\r\n        case !company:\r\n            return (\r\n                <div className=\"text-align-center\">정보 없음</div>\r\n            )\r\n        case error:\r\n            return (\r\n                <div className=\"text-align-center\">에러</div>\r\n            )\r\n        default:\r\n            return (\r\n                <div className=\"company_detail\">\r\n                    <div className=\"company_detail_box\">\r\n                        <div className=\"company_detail_box_inner\">\r\n                            <div className=\"company_detail_box_inner_top\">\r\n                                <div className=\"company_detail_box_inner_top--left\">\r\n                                    <div className=\"company_detail_poster\">\r\n                                        <span>\r\n                                            <img alt={`${company.companyNm}의 사진`}></img>\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"company_detail_box_inner_top--right\">\r\n                                    <ContentTag content={company} propertyName=\"companyNm\" classNm=\"company_detail_name_ko\" />\r\n                                    <ContentTag content={company} propertyName=\"companyNmEn\" classNm=\"company_detail_name_en\" />\r\n                                    <ContentTag content={company} propertyName=\"ceoNm\" classNm=\"company_detail_ceo_name\" />\r\n                                    <ContentsTag contents={company.parts} propertyName=\"companyPartNm\" childClassNm=\"company_part\" classNm=\"company_detail_parts\" childClassNm=\"company_part\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"company_detail_box_inner_bottom\">\r\n                                <div className=\"company_detail_box_inner_botom--all\">\r\n                                    <div className=\"company_detail_box_filmo_perpace\"><h3>필모리스트</h3></div>\r\n                                    <FilmosTag filmos={company.filmos} />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n    }\r\n}\r\n\r\nexport default CompanyDetail;","import { companyDetailRest, apiKey } from \"../api/rest/rest.js\";\r\n\r\n\r\nconst GET_COMPANY_DETAIL = \"companyDetail/GET_COMPANY_DETAIL\";\r\nconst GET_COMPANY_DETAIL_SUCCESS = \"companyDetail/GET_COMPANY_DETAIL_SUCCESS\";\r\nconst GET_COMPANY_DETAIL_ERROR = \"companyDetail/GET_COMPANY_DETAIL_ERROR\";\r\n\r\nexport const getCompanyDetail = (pCompanyCd = \"\") => async dispatch => {\r\n    dispatch({ type: GET_COMPANY_DETAIL });\r\n    try {\r\n        const data = await getCompanyDetailData(pCompanyCd);\r\n        dispatch({ type: GET_COMPANY_DETAIL_SUCCESS, data })\r\n    } catch (e) {\r\n        dispatch({ type: GET_COMPANY_DETAIL_ERROR });\r\n    }\r\n}\r\n\r\nconst getCompanyDetailData = async (pCompanyCd) => {\r\n    const companyCd = pCompanyCd !== \"\" ? `&companyCd=${pCompanyCd}` : \"\";\r\n    const res = await fetch(`${companyDetailRest}${apiKey}${companyCd}`)\r\n    const jsonRes = await res.json();\r\n    const sendData = jsonRes.companyInfoResult.companyInfo;\r\n    return sendData;\r\n}\r\n\r\nconst initialState = {\r\n    companyDetail: {\r\n        loading: false,\r\n        data: null,\r\n        error: null,\r\n    }\r\n}\r\n\r\nconst companyDetail = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_COMPANY_DETAIL: {\r\n            return {\r\n                companyDetail: { ...state.companyDetail, loading: true }\r\n            };\r\n        }\r\n        case GET_COMPANY_DETAIL_SUCCESS: {\r\n            return {\r\n                companyDetail: { ...state.companyDetail, data: action.data, loading: false }\r\n            };\r\n        }\r\n        case GET_COMPANY_DETAIL_ERROR: {\r\n            return {\r\n                companyDetail: { ...state.companyDetail, error: action.error, loading: false }\r\n            };\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default companyDetail;","import CompanyDetail from \"../components/CompanyDetail.js\";\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { getCompanyDetail } from \"../modules/companyDetail.js\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst CompanyDetailContainer = ({ match }) => {\r\n    const { loading, error, company } = useSelector(state => ({\r\n        company: state.companyDetail.companyDetail.data,\r\n        loading: state.companyDetail.companyDetail.loading,\r\n        error: state.companyDetail.companyDetail.error,\r\n    }));\r\n\r\n    const { companyid } = match.params;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const onGetCompanyDetail = (companyCd) => {\r\n        dispatch(getCompanyDetail(companyCd));\r\n    }\r\n\r\n    useEffect(() => {\r\n        onGetCompanyDetail(companyid)\r\n    }, [companyid]);\r\n\r\n    return <CompanyDetail\r\n        loading={loading}\r\n        company={company}\r\n        error={error}\r\n    />\r\n}\r\n\r\nexport default CompanyDetailContainer;","import { useRef } from \"react\"\r\nimport \"./People.css\";\r\nimport { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { LoadingBar, LoadingBarViewMore } from \"../api/loadingbar/loadingbar.js\";\r\nimport { ContentTag } from \"../api/contentTag/contentTag.js\";\r\n\r\n\r\nconst People = ({ error, onSetItemRowPage, loading, people, onGetPeople, onSetPeople, onPageUp, currentPage }) => {\r\n    const peopleNmRef = useRef();\r\n    const filmoNmRef = useRef();\r\n    const itemRowPageRef = useRef(10);\r\n\r\n    const [itemRowPage, setItemRowPage] = useState(10);\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        onSetPeople(peopleNmRef.current.value, filmoNmRef.current.value);\r\n        onSetItemRowPage(itemRowPage);\r\n        itemRowPageRef.current = itemRowPage;\r\n        onGetPeople();\r\n    }\r\n\r\n    const TitleTag = () => {\r\n        return (\r\n            <div className=\"container text-align-center title_container\">\r\n                <h1>영화인</h1>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const onChangeItemRowPage = (e) => {\r\n        setItemRowPage(e.target.value);\r\n        onSetItemRowPage(e.target.value);\r\n    }\r\n\r\n    const SelectTag = () => {\r\n        return (\r\n            <div className=\"container select_container\">\r\n                <div className=\"text-align-center\">\r\n                    <label>검색 결과 개수</label>\r\n                    <select value={itemRowPage} onChange={onChangeItemRowPage} id=\"select-itemPerPage\">\r\n                        <option value=\"1\">1</option>\r\n                        <option value=\"5\">5</option>\r\n                        <option value=\"10\">10</option>\r\n                        <option value=\"20\">20</option>\r\n                        <option value=\"50\">50</option>\r\n                        <option value=\"100\">100</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const InputForm = () => {\r\n        return (\r\n            <div className=\"container form_container\">\r\n                <form className=\"text-align-center\" onSubmit={onSubmit}>\r\n                    <fieldset className=\"people_fieldset\">\r\n                        <input className=\"input_name\" ref={peopleNmRef} type=\"text\" placeholder=\"영화인명\" />\r\n                        <input className=\"input_filmo\" ref={filmoNmRef} type=\"text\" placeholder=\"출연영화\" />\r\n                        <input className=\"input_submit\" type=\"submit\" onSubmit={onSubmit} />\r\n                    </fieldset>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const PeopleGetMore = () => {\r\n        if (currentPage * itemRowPageRef.current !== people.length) return\r\n        onPageUp();\r\n        onGetPeople()\r\n    }\r\n\r\n    const PeopleTag = ({ PeopleList, keyName }) => {\r\n        return (\r\n            <div className=\"peoplelist_people\">\r\n                {PeopleList.map((people) => {\r\n                    return (\r\n                        <div key={people[keyName]} className=\"people_wrap\">\r\n                            <div className=\"people_inner\">\r\n                                <Link to={`/People/detail/${people.peopleCd}`} className=\"people_inner_top\">\r\n                                    <div className=\"people_poster front\">\r\n                                        <span>\r\n                                            <img alt={`배우 ${people.peopleNm}의 사진`} />\r\n                                        </span>\r\n                                    </div>\r\n                                </Link>\r\n                                <div className=\"people_inner_bottom\">\r\n                                    <ContentTag content={people} propertyName=\"peopleNm\" classNm=\"people_name_ko\" />\r\n                                    <ContentTag content={people} propertyName=\"peopleNmEn\" classNm=\"people_name_en\" />\r\n                                    <ContentTag content={people} propertyName=\"repRoleNm\" classNm=\"people_rep_role_nm\" />\r\n                                    <ContentTag content={people} propertyName=\"filmo_names\" classNm=\"people_filmo_names\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    switch (true) {\r\n        case loading && !people:\r\n            return (\r\n                <>\r\n                    <TitleTag />\r\n                    <InputForm />\r\n                    <SelectTag />\r\n                    <LoadingBar />\r\n                </>\r\n            )\r\n        case loading:\r\n            return (\r\n                <>\r\n                    <TitleTag />\r\n                    <InputForm />\r\n                    <SelectTag />\r\n                    <div className=\"peoplelist\">\r\n                        <div className=\"container\">\r\n                            <PeopleTag keyName=\"peopleCd\" PeopleList={people} />\r\n                            < LoadingBarViewMore />\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            )\r\n        case error:\r\n            return (\r\n                <>\r\n                    <TitleTag />\r\n                    <InputForm />\r\n                    <SelectTag />\r\n                    <div className=\"text-align-center\">에러</div>\r\n                </>\r\n            )\r\n        case !people:\r\n            return (\r\n                <>\r\n                    <TitleTag />\r\n                    <InputForm />\r\n                    <SelectTag />\r\n                </>\r\n            )\r\n        case people.length === 0:\r\n            return (\r\n                <>\r\n                    <TitleTag />\r\n                    <InputForm />\r\n                    <SelectTag />\r\n                    <div className=\"text-align-center\">정보 없음</div>\r\n                </>\r\n            )\r\n        default:\r\n            return (\r\n                <>\r\n                    <TitleTag />\r\n                    <InputForm />\r\n                    <SelectTag />\r\n                    <div className=\"peoplelist\">\r\n                        <div className=\"container\">\r\n                            <PeopleTag keyName=\"peopleCd\" PeopleList={people} />\r\n                            {\r\n                                currentPage * itemRowPageRef.current === people.length &&\r\n                                <div className=\"view_more_button\">\r\n                                    <button onClick={PeopleGetMore}><i className=\"fas fa-chevron-circle-down\"></i></button>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            )\r\n    }\r\n}\r\n\r\nexport default People;","import { peopleRest, apiKey } from \"../api/rest/rest.js\";\r\n\r\nconst GET_PEOPLE = \"people/GET_PEOPLE\";\r\nconst GET_PEOPLE_SUCCESS = \"people/GET_PEOPLE_SUCCESS\";\r\nconst GET_PEOPLE_ERROR = \"people/GET_PEOPLE_ERROR\";\r\nconst SET_PEOPLE = \"people/SET_PEOPLE\";\r\nconst Page_UP = \"people/Page_UP\";\r\nconst SET_ITEMROWPAGE = \"people/SET_ITEMROWPAGE\";\r\n\r\nexport const setItemRowPage = (itemRow) => {\r\n    return { type: SET_ITEMROWPAGE, itemRow };\r\n}\r\n\r\nexport const getPeople = () => async (dispatch, getState) => {\r\n    dispatch({ type: GET_PEOPLE });\r\n    try {\r\n        const { peopleName, peopleFilmo, currentPage, itemRowPage } = getState().people;\r\n        const data = await getPeopleData(peopleName, peopleFilmo, currentPage, itemRowPage);\r\n        dispatch({ type: GET_PEOPLE_SUCCESS, data })\r\n    } catch (e) {\r\n        dispatch({ type: GET_PEOPLE_ERROR });\r\n    }\r\n}\r\n\r\nexport const setPeople = (peopleName, peopleFilmo) => {\r\n    return { type: SET_PEOPLE, peopleName, peopleFilmo };\r\n}\r\n\r\nexport const pageUp = () => {\r\n    return { type: Page_UP };\r\n}\r\n\r\nconst getPeopleData = async (pPeopleNm = \"\", pFilmoNm = \"\", currentPage, itemRowPage) => {\r\n    const peopleNm = pPeopleNm !== \"\" ? `&peopleNm=${pPeopleNm}` : \"\";\r\n    const filmoNames = pFilmoNm !== \"\" ? `&filmoNames=${pFilmoNm}` : \"\";\r\n    const curPage = `&curPage=${currentPage}`;\r\n    const itemPerPage = `&itemPerPage=${itemRowPage}`\r\n    const res = await fetch(`${peopleRest}${apiKey}${peopleNm}${curPage}${filmoNames}${itemPerPage}`)\r\n    const jsonRes = await res.json();\r\n    const sendData = jsonRes.peopleListResult.peopleList;\r\n    return sendData;\r\n}\r\n\r\nconst initialState = {\r\n    people: {\r\n        loading: false,\r\n        data: null,\r\n        error: null,\r\n    },\r\n    peopleName: \"\",\r\n    peopleFilmo: \"\",\r\n    currentPage: 1,\r\n    itemRowPage: 10,\r\n}\r\n\r\nconst people = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_ITEMROWPAGE: {\r\n            return {\r\n                ...state,\r\n                itemRowPage: action.itemRow,\r\n            }\r\n        }\r\n        case SET_PEOPLE: {\r\n            return {\r\n                ...state,\r\n                people: {\r\n                    loading: false,\r\n                    data: null,\r\n                    error: null,\r\n                },\r\n                peopleName: action.peopleName,\r\n                peopleFilmo: action.peopleFilmo,\r\n                currentPage: 1,\r\n            };\r\n        }\r\n        case Page_UP: {\r\n            return {\r\n                ...state,\r\n                currentPage: state.currentPage + 1,\r\n            };\r\n        }\r\n        case GET_PEOPLE: {\r\n            return {\r\n                ...state,\r\n                people: { ...state.people, loading: true }\r\n            };\r\n        }\r\n        case GET_PEOPLE_SUCCESS: {\r\n            const sendData = !state.people.data ? action.data : state.people.data.concat(action.data);\r\n            return {\r\n                ...state,\r\n                people: { ...state.people, data: sendData, loading: false }\r\n            };\r\n        }\r\n        case GET_PEOPLE_ERROR: {\r\n            return {\r\n                ...state,\r\n                people: { ...state.people, error: action.error, loading: false }\r\n            };\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default people;","import People from \"../components/People.js\";\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { getPeople, setPeople, pageUp, setItemRowPage } from \"../modules/people.js\";\r\n\r\nconst PeopleContainer = () => {\r\n    const { people, loading, error, currentPage } = useSelector(state => ({\r\n        people: state.people.people.data,\r\n        loading: state.people.people.loading,\r\n        error: state.people.people.error,\r\n        currentPage: state.people.currentPage,\r\n    }));\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const onSetItemRowPage = (item) => {\r\n        dispatch(setItemRowPage(item));\r\n    }\r\n\r\n    const onSetPeople = (peopleName, peopleFilmo) => {\r\n        dispatch(setPeople(peopleName, peopleFilmo));\r\n    }\r\n\r\n    const onPageUp = () => {\r\n        dispatch(pageUp());\r\n    }\r\n\r\n    const onGetPeople = (peopleNm, pageIndex) => {\r\n        dispatch(getPeople(peopleNm, pageIndex));\r\n    }\r\n\r\n    return <People\r\n        loading={loading}\r\n        error={error}\r\n        onGetPeople={onGetPeople}\r\n        people={people}\r\n        onSetPeople={onSetPeople}\r\n        onPageUp={onPageUp}\r\n        currentPage={currentPage}\r\n        onSetItemRowPage={onSetItemRowPage}\r\n    />\r\n}\r\n\r\nexport default PeopleContainer;","import \"./PeopleDetail.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { LoadingBar } from \"../api/loadingbar/loadingbar.js\";\r\nimport { ContentTag } from \"../api/contentTag/contentTag.js\";\r\n\r\nconst PeopleDetail = ({ loading, people, error }) => {\r\n\r\n    const FilmosTag = ({ filmos }) => {\r\n        return (\r\n            <div className=\"person_filmos\">\r\n                {filmos.map((filmo) => {\r\n                    return (\r\n                        <div key={`${filmo.movieCd}`} className=\"person_filmo\">\r\n                            <Link\r\n                                className=\"movie_link\"\r\n                                to={`/movie/detail/${filmo.movieCd}`}>\r\n                                <div className=\"person_filmo_poster\">\r\n                                    <span>\r\n                                        <img alt={`영화 ${filmo.movieNm}의 포스터`} />\r\n                                    </span>\r\n                                </div>\r\n                            </Link>\r\n                            <div className=\"person_filmo_name\"><h5>{filmo.movieNm}</h5></div>\r\n                            <div className=\"person_filmo_cast\"><h5>{filmo.moviePartNm}</h5></div>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    switch (true) {\r\n        case loading:\r\n            return (\r\n                <LoadingBar />\r\n            )\r\n        case !people && !loading:\r\n            return (\r\n                <div className=\"text-align-center\">정보 없음</div>\r\n            )\r\n        default:\r\n            return (\r\n                <div className=\"person\">\r\n                    <div className=\"person_box\">\r\n                        <div className=\"person_box_inner\">\r\n                            <div className=\"person_box_inner_top\">\r\n                                <div className=\"person_box_inner_top--left\">\r\n                                    <div className=\"person_poster\">\r\n                                        <span>\r\n                                            <img alt={`${people.peopleNm}의 사진`}></img>\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"person_box_inner_top--right\">\r\n                                    <ContentTag content={people} propertyName={\"peopleNm\"} classNm=\"pserson_name_ko\" />\r\n                                    <ContentTag content={people} propertyName={\"peopleNmEn\"} classNm=\"pserson_name_en\" />\r\n                                    <ContentTag content={people} propertyName={\"repRoleNm\"} classNm=\"pserson_role\" />\r\n                                    <ContentTag content={people} propertyName={\"sex\"} classNm=\"person_sex\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"person_box_inner_bottom\">\r\n                                <div className=\"person_box_inner_botom--all\">\r\n                                    <div className=\"person_box_filmo_perpace\"><h3>필모리스트</h3></div>\r\n                                    <FilmosTag filmos={people.filmos} />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n    }\r\n\r\n}\r\n\r\nexport default PeopleDetail;","import { peopleDetailRest, apiKey } from \"../api/rest/rest.js\";\r\n\r\nconst GET_PEOPLE = \"PeopleDetail/GET_PEOPLE\";\r\nconst GET_PEOPLE_SUCCESS = \"PeopleDetail/GET_PEOPLE_SUCCESS\";\r\nconst GET_PEOPLE_ERROR = \"PeopleDetail/GET_PEOPLE_ERROR\";\r\nconst SET_PEOPLE_ID = \"PeopleDetail/SET_PEOPLE_ID\";\r\n\r\nexport const setPeopleId = (peopleId) => {\r\n    return { type: SET_PEOPLE_ID, peopleId }\r\n}\r\n\r\nexport const getPeopleDetail = (pPeopleId = \"\") => async dispatch => {\r\n    dispatch({ type: GET_PEOPLE });\r\n    try {\r\n        const data = await getPeopleDetailData(pPeopleId);\r\n        dispatch({ type: GET_PEOPLE_SUCCESS, data })\r\n    } catch (e) {\r\n        dispatch({ type: GET_PEOPLE_ERROR });\r\n    }\r\n}\r\n\r\n\r\nconst getPeopleDetailData = async (pPeopleId) => {\r\n    const peopleCd = pPeopleId !== \"\" ? `&peopleCd=${pPeopleId}` : \"\";\r\n    const res = await fetch(`${peopleDetailRest}${apiKey}${peopleCd}`)\r\n    const jsonRes = await res.json();\r\n    const sendData = jsonRes.peopleInfoResult.peopleInfo;\r\n    return sendData;\r\n}\r\n\r\nconst initialState = {\r\n    peopleDetail: {\r\n        loading: false,\r\n        data: null,\r\n        error: null,\r\n    },\r\n    peopleId: null,\r\n}\r\n\r\nconst PeopleDetail = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_PEOPLE_ID: {\r\n            return {\r\n                ...state,\r\n                peopleId: action.peopleId,\r\n            }\r\n        }\r\n        case GET_PEOPLE: {\r\n            return {\r\n                peopleDetail: { ...state.peopleDetail, loading: true }\r\n            };\r\n        }\r\n        case GET_PEOPLE_SUCCESS: {\r\n            return {\r\n                peopleDetail: { ...state.peopleDetail, data: action.data, loading: false }\r\n            };\r\n        }\r\n        case GET_PEOPLE_ERROR: {\r\n            return {\r\n                peopleDetail: { ...state.peopleDetail, error: action.error, loading: false }\r\n            };\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default PeopleDetail;","import PeopleDetail from \"../components/PeopleDetail.js\";\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { setPeopleId, getPeopleDetail } from \"../modules/peopleDetail\"\r\nimport { useEffect } from \"react\";\r\n\r\n\r\nconst PeopleDetailContainer = ({ match }) => {\r\n    const { people, loading, error, peopleId } = useSelector(state => ({\r\n        people: state.peopleDetail.peopleDetail.data,\r\n        loading: state.peopleDetail.peopleDetail.loading,\r\n        error: state.peopleDetail.peopleDetail.error,\r\n        peopleId: state.peopleDetail.peopleId,\r\n    }));\r\n\r\n    const { id } = match.params;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const onSetPeopleId = (peopleId) => {\r\n        dispatch(setPeopleId(peopleId));\r\n    }\r\n\r\n    const onGetPeopleDetail = (peopleId) => {\r\n        dispatch(getPeopleDetail(peopleId));\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (peopleId === id) return\r\n        onGetPeopleDetail(id);\r\n        onSetPeopleId(id);\r\n    }, []);\r\n\r\n    return <PeopleDetail\r\n        loading={loading}\r\n        error={error}\r\n        people={people}\r\n    />\r\n}\r\n\r\nexport default PeopleDetailContainer;","import './App.css';\nimport BoxOfficeContainer from \"./container/BoxOfficeContainer.js\";\nimport MovieDetailContainer from \"./container/MovieDetailContainer.js\";\nimport NavbarContainer from \"./container/NavbarContainer.js\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport MovieListContainer from \"./container/MovieListContainer.js\";\nimport CompanyContainer from \"./container/CompanyContainer.js\";\nimport CompanyDetailContainer from \"./container/CompanyDetailContainer.js\";\nimport PeopleContainer from \"./container/PeopleContainer.js\";\nimport PeopleDetailContainer from './container/PeopleDetailContainer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router basename={process.env.PUBLIC_URL}>\n        <Route path=\"/\" component={NavbarContainer} />\n        <Switch>\n          <Route exact path=\"/\" component={BoxOfficeContainer} />\n          <Route path=\"/movielist\" component={MovieListContainer} />\n          <Route path=\"/companys\" component={CompanyContainer} />\n          <Route path=\"/company/detail/:companyid\" component={CompanyDetailContainer} />\n          <Route path=\"/peoplelist\" component={PeopleContainer} />\n          <Route path=\"/people/detail/:id\" component={PeopleDetailContainer} />\n          <Route path=\"/movie/detail/:id\" component={MovieDetailContainer} />\n          <Route path=\"*\" component={() => {\n            return <div className=\"notfound_page\"><h5>404 Not Found</h5></div>\n          }} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from \"redux\";\r\nimport boxOffice from \"./boxOffice.js\";\r\nimport movieDetail from \"./movieDetail.js\";\r\nimport movieList from \"./movieList.js\";\r\nimport company from \"./company.js\";\r\nimport companyDetail from \"./companyDetail.js\";\r\nimport people from \"./people.js\";\r\nimport peopleDetail from \"./peopleDetail.js\";\r\n\r\nconst rootReducer = combineReducers({\r\n    boxOffice,\r\n    movieDetail,\r\n    movieList,\r\n    company,\r\n    companyDetail,\r\n    people,\r\n    peopleDetail,\r\n});\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from \"react-redux\"\nimport { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"./modules/index.js\";\nimport ReduxThunk from \"redux-thunk\";\n\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(ReduxThunk)\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nreportWebVitals();"],"sourceRoot":""}